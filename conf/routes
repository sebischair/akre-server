# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
GET           /addToken                         controllers.AnnotationController.addToken(token: String ?= "")
GET           /removeToken                      controllers.AnnotationController.removeToken(token: String ?= "")
POST          /processDocument                  controllers.DocumentController.processDocument()
POST          /annotate                         controllers.DocumentController.processDocument()
POST          /getMetaInformation               controllers.DocumentController.getMetaInformation()
POST          /getSoftwareSolutions             controllers.SoftwareRecommendationController.getSoftwareSolutions()
POST          /getAlternatives                  controllers.AlternativesRecommendationController.getAlternatives()
POST          /removeSoftware                   controllers.SoftwareRecommendationController.removeSoftwareSolution()
POST          /addSoftware                      controllers.SoftwareRecommendationController.addSoftwareSolution()
POST          /removeAlternative                controllers.AlternativesRecommendationController.removeAlternative()
POST          /addAlternative                   controllers.AlternativesRecommendationController.addAlternative()

#cc-annotator rest api
POST          /processCode                      controllers.CodeController.processCode()
GET           /pattern                          controllers.CodeController.pattern(projectId: String ?= "")
POST          /pattern                          controllers.CodeController.updatePattern()
POST          /codeToken                        controllers.CCAnnotatorController.create()
GET           /codeToken                        controllers.CCAnnotatorController.getAll()
GET           /codeTokenInFile                  controllers.CCAnnotatorController.getAllForFileId(fileId: String ?= "")
GET           /codeTokenInProject               controllers.CCAnnotatorController.getAllForProjectId(projectId: String ?= "")
GET           /deleteCodeToken                  controllers.CCAnnotatorController.delete(id: String ?= "")

# Amelietor specific
POST          /getFileContent                   controllers.getFileContent.upload()
POST          /createSession                    controllers.SessionController.createNewSession()

GET           /annotations                      controllers.AnnotationController.getAll()
GET           /paragraph/:paragraphHash/annotations         controllers.AnnotationController.getAnnotationsByHash(paragraphHash: String)
POST          /annotation                       controllers.AnnotationController.create()
PUT           /annotation/:annotationId         controllers.AnnotationController.update(annotationId: String)
DELETE        /annotation/:annotationId         controllers.AnnotationController.delete(annotationId: String)


#uncertainty detection
POST          /upload                           controllers.getFileContent.uploadAndSave()
GET           /annotate/:paraghraphHash         controllers.SpaCyController.process(paraghraphHash)

#POST          /record/delete/all                           controllers.RecordController.deleteAllDocuments()
#GET           /record/all                                  controllers.RecordController.getAllDocuments()
GET           /updateTaskWithQA                 controllers.amelie.QualityAttributesController.updateTaskWithQA(projectKey: String)
GET           /updateTaskWithAE                 controllers.amelie.ArchitecturalElementsController.updateTaskWithAE(projectKey: String)
GET           /getAssignee                      controllers.amelie.AssigneeController.getAssignee(projectKey: String)
GET           /predictAssignee                  controllers.amelie.AssigneePredictionController.predictAssignee(projectKey: String)

GET           /labelDesignDecisions             controllers.amelie.LabelDesignDecisionsController.labelDesignDecisions(projectKey: String)

GET           /getDataForAEV                    controllers.amelie.AEDataController.getAEData(projectKey: String)
GET           /getDataForQAV                    controllers.amelie.QADataController.getQAData(projectKey: String)
POST          /getDataForDDV                    controllers.amelie.DDDataController.getDDData()
POST          /project                          controllers.amelie.ProjectController.create()
GET           /project                          controllers.amelie.ProjectController.getAll()
GET           /project/:key                     controllers.amelie.ProjectController.getProjectByKey(key: String)
GET           /designDecisions                  controllers.amelie.DesignDecisionController.getAllDesignDecisions(projectKey: String)
GET           /designDecision                   controllers.amelie.DesignDecisionController.getDesignDecision(issueKey: String)
GET           /updateProjectProcessState        controllers.amelie.ProjectController.updateProjectProcessState(projectKey: String)
GET           /updateProjectIssueCount          controllers.amelie.ProjectController.updateProjectIssueCount(projectKey: String)
GET           /updateSimilarDocuments           controllers.amelie.SimilarDocumentsController.updateSimilarDocuments(projectKey: String)

GET           /updateAllConcepts                controllers.amelie.KeywordExtractorController.updateConceptsForDesignDecisions(projectKey: String)
GET           /updateAllKeywords                controllers.amelie.KeywordExtractorController.updateKeywordsForDesignDecisions(projectKey: String)