{
	"info": {
		"_postman_id": "adae372b-abdb-4d8b-9b03-cb19ebb39fae",
		"name": "AKREC Server",
		"description": "AKREC Server is an open source project responsible for handling requests from the [AMELIE](https://github.com/sebischair/amelietor) project. \n\nYou can find out more about this project [on GitHub](https://github.com/sebischair/akre-server/).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AMELIE",
			"description": null,
			"item": [
				{
					"name": "Add architectural element",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{SERVER_URL}}/addToken?token={{EXAMPLE_ADD_TOKEN}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"addToken"
							],
							"query": [
								{
									"key": "token",
									"value": "{{EXAMPLE_ADD_TOKEN}}"
								}
							]
						},
						"description": "This endpoint is used to create a new architectural element. The newly created token will be saved and can be annotated as a DBpedia entity during document processing.\n\nIt accepts a token name as part of URL parameters of a `GET` request."
					},
					"response": []
				},
				{
					"name": "Remove architectural element",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{SERVER_URL}}/removeToken?token={{EXAMPLE_REMOVE_TOKEN}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"removeToken"
							],
							"query": [
								{
									"key": "token",
									"value": "{{EXAMPLE_REMOVE_TOKEN}}"
								}
							]
						},
						"description": "This endpoint is used to delete an existing architectural element. The element will be removed from DBpedia and won't be annotated as architectural elements anymore.\n\nIt accepts a token name as part of URL parameters of a `GET` request."
					},
					"response": []
				},
				{
					"name": "Annotate document",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"The Yummy Inc online application will be deployed onto a J2EE application server Websphere Application Server version 6, as it is already the application server use for internal applications. J2EE security model will be reused. Data persistence will be addressed using a relational database.\"\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/processDocument",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"processDocument"
							]
						},
						"description": "This endpoint is used to annotate a text.\n\nIt accepts a JSON object as the request body. In the JSON object, key `content` contains the text to be annotated. A list of annotations will be sent back in the `data` field of the response."
					},
					"response": []
				},
				{
					"name": "Get meta-information",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uri\": \"http://dbpedia.org/resource/Java_Platform,_Enterprise_Edition\"\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/getMetaInformation",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"getMetaInformation"
							]
						},
						"description": "This endpoint retrieves the meta-information of an architectural element from Dbpedia ontology. \n\nThe body of request contains an `uri`, pointing to the element on DBpedia. A JSON object of meta-information will be returned."
					},
					"response": [
						{
							"id": "ee56f807-4082-44dc-ab86-64bb4a3e90b0",
							"name": "Get meta-information example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"uri\": \"http://dbpedia.org/resource/Java_Platform,_Enterprise_Edition\"\n}"
								},
								"url": {
									"raw": "{{SERVER_URL}}/getMetaInformation",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"getMetaInformation"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "26806",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 14 May 2018 11:38:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "{\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\":[{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/Communication100033020\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/Hypothesis105888929\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/WikicatWebApplicationFrameworks\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/WikicatJavaSpecificationRequests\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/Model105890249\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/Abstraction100002137\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/Request106513366\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/Concept105835747\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/Content105809192\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/Idea105833840\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/Cognition100023271\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/PsychologicalFeature100023100\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/class/yago/Message106598915\"}],\"http://www.w3.org/2000/01/rdf-schema#label\":[{\"type\":\"literal\",\"value\":\"Java EE\",\"lang\":\"fr\"},{\"type\":\"literal\",\"value\":\"Java EE\",\"lang\":\"es\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition\",\"lang\":\"ru\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition\",\"lang\":\"de\"},{\"type\":\"literal\",\"value\":\"Java EE\",\"lang\":\"it\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition\",\"lang\":\"en\"},{\"type\":\"literal\",\"value\":\"Java 2 Enterprise Edition\",\"lang\":\"nl\"},{\"type\":\"literal\",\"value\":\"منصة جافا النسخة التجارية\",\"lang\":\"ar\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition\",\"lang\":\"pt\"},{\"type\":\"literal\",\"value\":\"Java EE\",\"lang\":\"zh\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition\",\"lang\":\"ja\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition\",\"lang\":\"pl\"}],\"http://www.w3.org/2000/01/rdf-schema#comment\":[{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition, abgekürzt Java EE oder früher J2EE, ist die Spezifikation einer Softwarearchitektur für die transaktionsbasierte Ausführung von in Java programmierten Anwendungen und insbesondere Web-Anwendungen. Sie ist eine der großen Plattformen, die um den Middleware-Markt kämpfen. Größter Konkurrent ist dabei die .NET-Plattform von Microsoft. Bestandteile der Spezifikation werden innerhalb des Java Community Process von diversen Unternehmen erarbeitet und schließlich der Öffentlichkeit in Form eines Dokuments und einer Referenzimplementierung zur Verfügung gestellt.\",\"lang\":\"de\"},{\"type\":\"literal\",\"value\":\"In informatica la Java Platform, Enterprise Edition o Java EE (conosciuta, prima della versione 5, col nome di Java 2 Enterprise Edition o J2EE) è una specifica le cui implementazioni vengono principalmente sviluppate in linguaggio di programmazione Java e ampiamente utilizzata nella programmazione Web. I software che implementano tale specifica vengono detti Application Server Java EE. L'implementazione può essere totale o limitata al Web Profile ovvero il sottoinsieme delle specifiche che è stato pensato appositamente per le applicazioni web.\",\"lang\":\"it\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition o Java EE (anteriormente conocido como Java 2 Platform, Enterprise Edition o J2EE hasta la versión 1.4; traducido informalmente como Java Empresarial), es una plataforma de programación—parte de la Plataforma Java—para desarrollar y ejecutar software de aplicaciones en el lenguaje de programación Java. Permite utilizar arquitecturas de N capas distribuidas y se apoya ampliamente en componentes de software modulares ejecutándose sobre un servidor de aplicaciones. La plataforma Java EE está definida por una especificación. Similar a otras especificaciones del Java Community Process, Java EE es también considerada informalmente como un estándar debido a que los proveedores deben cumplir ciertos requisitos de conformidad para declarar que sus productos son con\",\"lang\":\"es\"},{\"type\":\"literal\",\"value\":\"Java 2 Enterprise Edition (J2EE) is een ontwikkelplatform van het softwarebedrijf Sun Microsystems. J2EE biedt een methode voor het ontwerpen, ontwikkelen, samenstellen en gebruiken van bedrijfsapplicaties. Het platform biedt een multi-tier, gedistribueerd model, herbruikbare componenten, een beveiligingsmodel, flexibel transactiebeheer en ondersteuning voor webservices door middel van een geïntegreerde data-uitwisseling gebaseerd op XML.\",\"lang\":\"nl\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition (również jako Java Enterprise, J2EE oraz Java EE czasami tłumaczona jako Java Korporacyjna) jest szeroko rozpowszechnioną serwerową platformą programistyczną języka Java. Definiuje standard tworzenia aplikacji w języku programowania Java opartych o wielowarstwową architekturę komponentową. Komponenty są zwykle osadzane na serwerze aplikacyjnym obsługującym Java Enterprise. Standard ten określa zestaw interfejsów programistycznych jakich musi dostarczać zgodny serwer aplikacyjny.\",\"lang\":\"pl\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition (ou Java EE, ou EE, ou em português Plataforma Java, Edição Empresarial) é uma plataforma de programação para servidores na linguagem de programação Java. A plataforma fornece uma API e um ambiente de tempo de execução para o desenvolvimento e execução de softwares corporativos, incluindo serviços de rede e web, e outras aplicações de rede de larga escala, multicamadas, escaláveis, confiáveis e seguras. Java EE estende a Java Platform, Standard Edition (Java SE), fornecendo uma API para mapeamento objeto-relacional, arquiteturas multicamada e distribuídas e web services. A plataforma incorpora um desenho amplamente baseado em componentes modulares rodando em um servidor de aplicação. Softwares para Java EE são primeiramente desenvolvidos na linguagem de pr\",\"lang\":\"pt\"},{\"type\":\"literal\",\"value\":\"Java Enterprise Edition, ou Java EE (anciennement J2EE), est une spécification pour la technique Java d'Oracle plus particulièrement destinée aux applications d’entreprise. Ces applications sont considérées dans une approche multi-niveaux. Dans ce but, toutes les implémentations de cette spécification contiennent un ensemble d’extensions au framework Java standard (JSE, Java Standard Edition) afin de faciliter notamment la création d’applications réparties. Pour ce faire, Java EE définit les éléments suivants :\",\"lang\":\"fr\"},{\"type\":\"literal\",\"value\":\"Java EE，Java平台企业版（Java Platform Enterprise Edition），是Sun公司为企业级应用推出的标准平台。Java平台共分为三个主要版本Java EE、Java SE和Java ME。 Sun公司在1998年发表JDK1.2版本的时候，使用了新名称Java 2 Platform，即“Java2平台”，修改后的JDK称为Java 2 Platform Software Developing Kit，即J2SDK。并分为标准版（Standard Edition，J2SE），企业版（Enterprise Edition，J2EE），微型版（MicroEdition，J2ME）。J2EE便由此诞生。 2005年6月，JavaOne大会召开，SUN公司公开Java SE 6。此时，Java的各种版本已经更名以取消其中的数字“2”：J2EE更名为Java EE, J2SE更名为Java SE，J2ME更名为Java ME。 随着Java技术的发展，J2EE平台得到了迅速的发展，成为Java语言中最活跃的体系之一。现如今，J2EE不仅仅是指一种标准平台，它更多的表达着一种软件架构和设计思想。\",\"lang\":\"zh\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition or Java EE is a widely used computing platform for enterprise software. The platform provides an API and runtime environment for developing and running enterprise software, including network and web services, and other large-scale, multi-tiered, scalable, reliable, and secure network applications. Java EE extends the Java Platform, Standard Edition (Java SE), providing an API for object-relational mapping, distributed and multi-tier architectures, and web services. The platform incorporates a design based largely on modular components running on an application server. Software for Java EE is primarily developed in the Java programming language. The platform emphasizes convention over configuration and annotations for configuration. Optionally XML can be us\",\"lang\":\"en\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition (Java EE) は、Javaの企業用機能セット。Java Platform, Standard Edition (Java SE) の拡張機能の形で提供される。\",\"lang\":\"ja\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition, сокращенно Java EE (до версии 5.0 — Java 2 Enterprise Edition или J2EE) — набор спецификаций и соответствующей документации для языка Java, описывающей архитектуру серверной платформы для задач средних и крупных предприятий. JEE является промышленной технологией и в основном используется в высокопроизводительных проектах, в которых необходима надежность, масштабируемость, гибкость.\",\"lang\":\"ru\"},{\"type\":\"literal\",\"value\":\"منصة جافا الإصدار التجاري أو منصة جافا التجارية أو جافا EE هي منصة مستخدم على نطاق واسع لبرمجة الخوادم بلغة البرمجة جافا. منصة جافا التجارية تختلف عن جافا القياسية (Java SE) من حيث مكتبات الإضافات التي توفر الوظائف لتوزيع تحمل الخطأ، موزع، برنامج جافا متعدد المستويات، ويستند إلى حد كبير على مكونات معيارية تعمل على خوادم التطبيق. النسخ التي صدرت عن جافاMicro Edition (ME)النسخة الميكروStandard Edition (SE)النسخة الأساسيةEnterprise Edition (EE) النسخة التجارية PersonalJava (discontinued)جافا الشخصي (أعلن عن توقف استخدامها)\",\"lang\":\"ar\"}],\"http://www.w3.org/2002/07/owl#sameAs\":[{\"type\":\"uri\",\"value\":\"http://pl.dbpedia.org/resource/Java_Platform,_Enterprise_Edition\"},{\"type\":\"uri\",\"value\":\"http://it.dbpedia.org/resource/Java_EE\"},{\"type\":\"uri\",\"value\":\"http://rdf.freebase.com/ns/m.0bs6x\"},{\"type\":\"uri\",\"value\":\"http://el.dbpedia.org/resource/Java_Platform,_Enterprise_Edition\"},{\"type\":\"uri\",\"value\":\"http://ja.dbpedia.org/resource/Java_Platform,_Enterprise_Edition\"},{\"type\":\"uri\",\"value\":\"http://fr.dbpedia.org/resource/Java_EE\"},{\"type\":\"uri\",\"value\":\"http://es.dbpedia.org/resource/Java_EE\"},{\"type\":\"uri\",\"value\":\"http://de.dbpedia.org/resource/Java_Platform,_Enterprise_Edition\"},{\"type\":\"uri\",\"value\":\"http://nl.dbpedia.org/resource/Java_2_Enterprise_Edition\"},{\"type\":\"uri\",\"value\":\"http://www.wikidata.org/entity/Q193247\"},{\"type\":\"uri\",\"value\":\"http://wikidata.dbpedia.org/resource/Q193247\"},{\"type\":\"uri\",\"value\":\"http://pt.dbpedia.org/resource/Java_Platform,_Enterprise_Edition\"},{\"type\":\"uri\",\"value\":\"http://cs.dbpedia.org/resource/Java_EE\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/resource/Java_Platform,_Enterprise_Edition\"},{\"type\":\"uri\",\"value\":\"http://yago-knowledge.org/resource/Java_Platform,_Enterprise_Edition\"},{\"type\":\"uri\",\"value\":\"http://ko.dbpedia.org/resource/자바_플랫폼,_엔터프라이즈_에디션\"}],\"http://purl.org/dc/terms/subject\":[{\"type\":\"uri\",\"value\":\"http://dbpedia.org/resource/Category:Articles_with_example_Java_code\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/resource/Category:Java_enterprise_platform\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/resource/Category:Web_frameworks\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/resource/Category:Computing_platforms\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/resource/Category:Java_specification_requests\"},{\"type\":\"uri\",\"value\":\"http://dbpedia.org/resource/Category:Java_platform\"}],\"http://xmlns.com/foaf/0.1/isPrimaryTopicOf\":[{\"type\":\"uri\",\"value\":\"http://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition\"}],\"http://www.w3.org/ns/prov#wasDerivedFrom\":[{\"type\":\"uri\",\"value\":\"http://en.wikipedia.org/wiki/Java_Platform,_Enterprise_Edition?oldid=739925086\"}],\"http://dbpedia.org/ontology/wikiPageExternalLink\":[{\"type\":\"uri\",\"value\":\"http://java.sun.com/blueprints/corej2eepatterns/Patterns/index.html\"},{\"type\":\"uri\",\"value\":\"http://jcp.org/en/jsr/detail?id=299\"},{\"type\":\"uri\",\"value\":\"http://www.turngeek.press/javaeeinaday\"},{\"type\":\"uri\",\"value\":\"http://geronimo.apache.org\"},{\"type\":\"uri\",\"value\":\"http://www.oracle.com/technetwork/java/javaee/overview/compatibility-jsp-136984.html\"},{\"type\":\"uri\",\"value\":\"http://www.oracle.com/technetwork/java/javaee/overview/index.html\"},{\"type\":\"uri\",\"value\":\"http://docs.oracle.com/javaee/6/firstcup/doc/index.html\"}],\"http://dbpedia.org/ontology/abstract\":[{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition, сокращенно Java EE (до версии 5.0 — Java 2 Enterprise Edition или J2EE) — набор спецификаций и соответствующей документации для языка Java, описывающей архитектуру серверной платформы для задач средних и крупных предприятий. Спецификации детализированы настолько, чтобы обеспечить переносимость программ с одной реализации платформы на другую. Основная цель спецификаций — обеспечить масштабируемость приложений и целостность данных во время работы системы. JEE во многом ориентирована на использование её через веб, как в интернете, так и в локальных сетях. Вся спецификация создаётся и утверждается через JCP (Java Community Process) в рамках инициативы Sun Microsystems Inc. JEE является промышленной технологией и в основном используется в высокопроизводительных проектах, в которых необходима надежность, масштабируемость, гибкость. Популярности JEE также способствует то, что Sun предлагает бесплатный комплект разработки, SDK, позволяющий предприятиям разрабатывать свои системы, не тратя больших средств. В этот комплект входит сервер приложений GlassFish с лицензией для разработки.\",\"lang\":\"ru\"},{\"type\":\"literal\",\"value\":\"Java 2 Enterprise Edition (J2EE) is een ontwikkelplatform van het softwarebedrijf Sun Microsystems. J2EE biedt een methode voor het ontwerpen, ontwikkelen, samenstellen en gebruiken van bedrijfsapplicaties. Het platform biedt een multi-tier, gedistribueerd model, herbruikbare componenten, een beveiligingsmodel, flexibel transactiebeheer en ondersteuning voor webservices door middel van een geïntegreerde data-uitwisseling gebaseerd op XML. Bij het gebruik van Javaprogramma's op servers, wordt vaak J2EE gebruikt. J2EE is een uitbreiding van de J2SDK, Java 2-standaardeditie, met bibliotheken die een groot aantal klassen bevatten voor het programmeren van serverapplicaties, het communiceren met databases en het gebruik van allerlei generieke diensten. Het J2EE-platform is een platformonafhankelijke, volledig geïntegreerde oplossing die een open markt creëert waarin elke leverancier kan leveren aan elke klant. Zo'n soort markt moedigt leveranciers aan om te innoveren en voorkomt dat klanten afhankelijk worden gemaakt van een eigen technologie. Op deze manier profiteren klanten meer door verbeterde producten en betere ondersteuning.\",\"lang\":\"nl\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition (również jako Java Enterprise, J2EE oraz Java EE czasami tłumaczona jako Java Korporacyjna) jest szeroko rozpowszechnioną serwerową platformą programistyczną języka Java. Definiuje standard tworzenia aplikacji w języku programowania Java opartych o wielowarstwową architekturę komponentową. Komponenty są zwykle osadzane na serwerze aplikacyjnym obsługującym Java Enterprise. Standard ten określa zestaw interfejsów programistycznych jakich musi dostarczać zgodny serwer aplikacyjny. Standard Java Enterprise aktualnie tworzony jest przez Oracle, które wykupiło oryginalnego twórcę - Sun Microsystems. Firma ta dostarcza poza definicją interfejsów programistycznych, wzorcową implementację serwera aplikacyjnego (otwarta wersja: GlassFish, komercyjna Sun Java System Application Server). Rozwiązanie oparte na Java Enterprise powinno poprawnie funkcjonować na dowolnej platformie sprzętowej, systemie operacyjnym czy też serwerze aplikacji Java Enterprise. Zdarza się, iż aplikacje wymagają pewnych zmian przy przenoszeniu na inny serwer. Wynika to z faktu, iż nie wszystkie aspekty funkcjonowania aplikacji są objęte specyfikacją.\",\"lang\":\"pl\"},{\"type\":\"literal\",\"value\":\"In informatica la Java Platform, Enterprise Edition o Java EE (conosciuta, prima della versione 5, col nome di Java 2 Enterprise Edition o J2EE) è una specifica le cui implementazioni vengono principalmente sviluppate in linguaggio di programmazione Java e ampiamente utilizzata nella programmazione Web. I software che implementano tale specifica vengono detti Application Server Java EE. L'implementazione può essere totale o limitata al Web Profile ovvero il sottoinsieme delle specifiche che è stato pensato appositamente per le applicazioni web. La specifica è incoraggiare la creazione di applicazioni che seguono una architettura multi-tier. Tale architettura ha come scopo la separazione delle funzionalità relative alla visualizzazione delle pagine web da quelle per la gestione della logica di business e del salvataggio delle informazioni sulla base dati.\",\"lang\":\"it\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition, abgekürzt Java EE oder früher J2EE, ist die Spezifikation einer Softwarearchitektur für die transaktionsbasierte Ausführung von in Java programmierten Anwendungen und insbesondere Web-Anwendungen. Sie ist eine der großen Plattformen, die um den Middleware-Markt kämpfen. Größter Konkurrent ist dabei die .NET-Plattform von Microsoft. In der Spezifikation werden Softwarekomponenten und Dienste definiert, die hauptsächlich in der Programmiersprache Java erstellt werden. Die Spezifikation dient dazu, einen allgemein akzeptierten Rahmen zur Verfügung zu stellen, um auf dessen Basis aus modularen Komponenten verteilte, mehrschichtige Anwendungen entwickeln zu können. Klar definierte Schnittstellen zwischen den Komponenten und Containern sollen dafür sorgen, dass Softwarekomponenten unterschiedlicher Hersteller interoperabel sind, wenn sie sich an die Spezifikation halten, und dass die verteilte Anwendung gut skalierbar ist. Bestandteile der Spezifikation werden innerhalb des Java Community Process von diversen Unternehmen erarbeitet und schließlich der Öffentlichkeit in Form eines Dokuments und einer Referenzimplementierung zur Verfügung gestellt.\",\"lang\":\"de\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition o Java EE (anteriormente conocido como Java 2 Platform, Enterprise Edition o J2EE hasta la versión 1.4; traducido informalmente como Java Empresarial), es una plataforma de programación—parte de la Plataforma Java—para desarrollar y ejecutar software de aplicaciones en el lenguaje de programación Java. Permite utilizar arquitecturas de N capas distribuidas y se apoya ampliamente en componentes de software modulares ejecutándose sobre un servidor de aplicaciones. La plataforma Java EE está definida por una especificación. Similar a otras especificaciones del Java Community Process, Java EE es también considerada informalmente como un estándar debido a que los proveedores deben cumplir ciertos requisitos de conformidad para declarar que sus productos son conformes a Java EE; estandarizado por The Java Community Process / JCP. Java EE tiene varias especificaciones de API, tales como JDBC, RMI, e-mail, JMS, Servicios Web, XML, etc y define cómo coordinarlos. Java EE también configura algunas especificaciones únicas para Java EE para componentes. Estas incluyen Enterprise JavaBeans, servlets, portlets (siguiendo la especificación de Portlets Java), JavaServer Pages y varias tecnologías de servicios web. Ello permite al desarrollador crear una Aplicación de Empresa portable entre plataformas y escalable, a la vez que integrable con tecnologías anteriores. Otros beneficios añadidos son, por ejemplo, que el servidor de aplicaciones puede manejar transacciones, la seguridad, escalabilidad, concurrencia y gestión de los componentes desplegados, significando que los desarrolladores pueden concentrarse más en la lógica de negocio de los componentes en lugar de en tareas de mantenimiento de bajo nivel.\",\"lang\":\"es\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition or Java EE is a widely used computing platform for enterprise software. The platform provides an API and runtime environment for developing and running enterprise software, including network and web services, and other large-scale, multi-tiered, scalable, reliable, and secure network applications. Java EE extends the Java Platform, Standard Edition (Java SE), providing an API for object-relational mapping, distributed and multi-tier architectures, and web services. The platform incorporates a design based largely on modular components running on an application server. Software for Java EE is primarily developed in the Java programming language. The platform emphasizes convention over configuration and annotations for configuration. Optionally XML can be used to override annotations or to deviate from the platform defaults. Java EE is developed under the Java Community Process.\",\"lang\":\"en\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition (Java EE) は、Javaの企業用機能セット。Java Platform, Standard Edition (Java SE) の拡張機能の形で提供される。\",\"lang\":\"ja\"},{\"type\":\"literal\",\"value\":\"منصة جافا الإصدار التجاري أو منصة جافا التجارية أو جافا EE هي منصة مستخدم على نطاق واسع لبرمجة الخوادم بلغة البرمجة جافا. منصة جافا التجارية تختلف عن جافا القياسية (Java SE) من حيث مكتبات الإضافات التي توفر الوظائف لتوزيع تحمل الخطأ، موزع، برنامج جافا متعدد المستويات، ويستند إلى حد كبير على مكونات معيارية تعمل على خوادم التطبيق. النسخ التي صدرت عن جافاMicro Edition (ME)النسخة الميكروStandard Edition (SE)النسخة الأساسيةEnterprise Edition (EE) النسخة التجارية PersonalJava (discontinued)جافا الشخصي (أعلن عن توقف استخدامها)\",\"lang\":\"ar\"},{\"type\":\"literal\",\"value\":\"Java Platform, Enterprise Edition (ou Java EE, ou EE, ou em português Plataforma Java, Edição Empresarial) é uma plataforma de programação para servidores na linguagem de programação Java. A plataforma fornece uma API e um ambiente de tempo de execução para o desenvolvimento e execução de softwares corporativos, incluindo serviços de rede e web, e outras aplicações de rede de larga escala, multicamadas, escaláveis, confiáveis e seguras. Java EE estende a Java Platform, Standard Edition (Java SE), fornecendo uma API para mapeamento objeto-relacional, arquiteturas multicamada e distribuídas e web services. A plataforma incorpora um desenho amplamente baseado em componentes modulares rodando em um servidor de aplicação. Softwares para Java EE são primeiramente desenvolvidos na linguagem de programação Java. A plataforma enfatiza a convenção sobre configuração e anotações para configuração.\",\"lang\":\"pt\"},{\"type\":\"literal\",\"value\":\"Java EE，Java平台企业版（Java Platform Enterprise Edition），是Sun公司为企业级应用推出的标准平台。Java平台共分为三个主要版本Java EE、Java SE和Java ME。 Sun公司在1998年发表JDK1.2版本的时候，使用了新名称Java 2 Platform，即“Java2平台”，修改后的JDK称为Java 2 Platform Software Developing Kit，即J2SDK。并分为标准版（Standard Edition，J2SE），企业版（Enterprise Edition，J2EE），微型版（MicroEdition，J2ME）。J2EE便由此诞生。 2005年6月，JavaOne大会召开，SUN公司公开Java SE 6。此时，Java的各种版本已经更名以取消其中的数字“2”：J2EE更名为Java EE, J2SE更名为Java SE，J2ME更名为Java ME。 随着Java技术的发展，J2EE平台得到了迅速的发展，成为Java语言中最活跃的体系之一。现如今，J2EE不仅仅是指一种标准平台，它更多的表达着一种软件架构和设计思想。\",\"lang\":\"zh\"},{\"type\":\"literal\",\"value\":\"Java Enterprise Edition, ou Java EE (anciennement J2EE), est une spécification pour la technique Java d'Oracle plus particulièrement destinée aux applications d’entreprise. Ces applications sont considérées dans une approche multi-niveaux. Dans ce but, toutes les implémentations de cette spécification contiennent un ensemble d’extensions au framework Java standard (JSE, Java Standard Edition) afin de faciliter notamment la création d’applications réparties. Pour ce faire, Java EE définit les éléments suivants : \\n*  Une plate-forme (Java EE Platform), pour héberger et exécuter les applications, incluant outre Java SE des bibliothèques logicielles additionnelles du Java Development Kit (JDK) ; \\n*  Une suite de tests (Java EE Compatibility Test Suite) pour vérifier la compatibilité ; \\n*  Une réalisation de référence (Java EE Reference Implementation), dénommée GlassFish ; \\n*  Un catalogue de bonnes pratiques (Java EE BluePrints). \\n*  code scripte\",\"lang\":\"fr\"}],\"http://dbpedia.org/ontology/wikiPageRevisionID\":[{\"type\":\"literal\",\"value\":739925086,\"datatype\":\"http://www.w3.org/2001/XMLSchema#integer\"}],\"http://dbpedia.org/ontology/wikiPageID\":[{\"type\":\"literal\",\"value\":42869,\"datatype\":\"http://www.w3.org/2001/XMLSchema#integer\"}]}"
						}
					]
				},
				{
					"name": "Get software solutions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uri\": \"http://dbpedia.org/resource/Relational_database\"\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/getSoftwareSolutions",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"getSoftwareSolutions"
							]
						},
						"description": "This endpoint is used to find software solutions inplement an architectural topic. \n\nIt accepts a JSON object containing an architectural element in the uri. A list of software solutions will be returned."
					},
					"response": [
						{
							"id": "fffdfc2d-72ab-40bb-8cbb-df8efe031149",
							"name": "Get relational database solutions",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"uri\": \"http://dbpedia.org/resource/Relational_database\"\n}"
								},
								"url": {
									"raw": "{{SERVER_URL}}/getSoftwareSolutions",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"getSoftwareSolutions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "27000",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 08 May 2018 17:40:57 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "[{\"uri\":\"http://dbpedia.org/resource/R:Base\",\"title\":\"R:Base\",\"description\":\"<span class=\\\"searchmatch\\\">R:BASE</span> (or RBASE) was the first relational database program for the PC. Created by Wayne Erickson in 1981, on November 13, 1981, Erickson and his brother\",\"averageScore\":267581.0},{\"uri\":\"http://dbpedia.org/resource/PointBase\",\"title\":\"PointBase\",\"description\":\" &quot;IBM Grabs DataMirror Technology&quot;. eWeek. Retrieved 12 May 2011.     History of <span class=\\\"searchmatch\\\">PointBase</span> Guide to <span class=\\\"searchmatch\\\">PointBase</span> Oracle BEA WebLogic <span class=\\\"searchmatch\\\">Pointbase</span> Reference\",\"averageScore\":223874.0},{\"uri\":\"http://dbpedia.org/resource/TimesTen\",\"title\":\"TimesTen\",\"description\":\"<span class=\\\"searchmatch\\\">TimesTen</span> is an in-memory, relational database management system with persistence and recoverability. Originally designed and implemented at Hewlett-Packard\",\"averageScore\":133078.0},{\"uri\":\"http://dbpedia.org/resource/FrontBase\",\"title\":\"FrontBase\",\"description\":\"<span class=\\\"searchmatch\\\">FrontBase</span> is a relational database management system written in ANSI C. <span class=\\\"searchmatch\\\">FrontBase</span> uses the Unicode character encoding.   <span class=\\\"searchmatch\\\">FrontBase</span> complies with SQL 92\",\"averageScore\":123838.0},{\"uri\":\"http://dbpedia.org/resource/ObjectDatabase++\",\"title\":\"ObjectDatabase++\",\"description\":\"An <span class=\\\"searchmatch\\\">object</span> <span class=\\\"searchmatch\\\">database</span> is a database management system in which information is represented in the form of objects as used in object-oriented programming.\",\"averageScore\":24400.0},{\"uri\":\"http://dbpedia.org/resource/ObjectStore\",\"title\":\"ObjectStore\",\"description\":\"&quot;The <span class=\\\"searchmatch\\\">Objectstore</span> Database System&quot;, Communications of the ACM, 34 (10): 50–63, doi:10.1145/125223.125244   Progress Software divests <span class=\\\"searchmatch\\\">ObjectStore</span>,completes\",\"averageScore\":15654.0},{\"uri\":\"http://dbpedia.org/resource/Diesel_engine\",\"title\":\"Diesel engine\",\"description\":\"The <span class=\\\"searchmatch\\\">diesel</span> <span class=\\\"searchmatch\\\">engine</span> (also known as a compression-ignition or CI engine), named after Rudolf Diesel, is an internal combustion engine in which ignition of\",\"averageScore\":12756.0},{\"uri\":\"http://dbpedia.org/resource/Db4o\",\"title\":\"Db4o\",\"description\":\"<span class=\\\"searchmatch\\\">db4o</span> (database for objects) was an embeddable open source object database for Java and .NET developers. It was developed, commercially licensed and supported\",\"averageScore\":12001.0},{\"uri\":\"http://dbpedia.org/resource/U1DB\",\"title\":\"U1DB\",\"description\":\"<span class=\\\"searchmatch\\\">U1DB</span> is a cross-platform, cross-device, syncable database application programming interface (API). It allows applications to store JSON documents and synchronize\",\"averageScore\":11536.0},{\"uri\":\"http://dbpedia.org/resource/The_Eureka\",\"title\":\"The Eureka\",\"description\":\"<span class=\\\"searchmatch\\\">The</span> <span class=\\\"searchmatch\\\">Eureka</span> is a machine for generating Latin verses, created and exhibited in the mid nineteenth century by the Quaker inventor John Clark of Bridgwater\",\"averageScore\":9595.0},{\"uri\":\"http://dbpedia.org/resource/DatabaseSpy\",\"title\":\"DatabaseSpy\",\"description\":\"<span class=\\\"searchmatch\\\">DatabaseSpy</span> is a multi-database query, design, and database comparison tool from Altova, the creator of XMLSpy. <span class=\\\"searchmatch\\\">DatabaseSpy</span> connects to many major relational\",\"averageScore\":7227.0},{\"uri\":\"http://dbpedia.org/resource/BigCouch\",\"title\":\"BigCouch\",\"description\":\"<span class=\\\"searchmatch\\\">BigCouch</span> is an open source, highly available, fault-tolerant, clustered &amp; API-compliant version of Apache CouchDB, which was maintained by Cloudant. On\",\"averageScore\":3520.0},{\"uri\":\"http://dbpedia.org/resource/Jet_engine\",\"title\":\"Jet engine\",\"description\":\"airbreathing <span class=\\\"searchmatch\\\">jet</span> <span class=\\\"searchmatch\\\">engines</span> (turbojets, turbofans, ramjets, and pulse jets) and non-airbreathing <span class=\\\"searchmatch\\\">jet</span> <span class=\\\"searchmatch\\\">engines</span> (such as rocket engines). In general, <span class=\\\"searchmatch\\\">jet</span> <span class=\\\"searchmatch\\\">engines</span> are\",\"averageScore\":2491.0},{\"uri\":\"http://dbpedia.org/resource/ObjectDB\",\"title\":\"ObjectDB\",\"description\":\"Adds <span class=\\\"searchmatch\\\">ObjectDB</span> as a BIRT data source and JPQL / JDOQL queries as data sets.     http://www.<span class=\\\"searchmatch\\\">objectdb</span>.com/<span class=\\\"searchmatch\\\">object</span>/<span class=\\\"searchmatch\\\">db</span>/database/license  http://www.<span class=\\\"searchmatch\\\">objectdb</span>.com/\",\"averageScore\":2230.0},{\"uri\":\"http://dbpedia.org/resource/MariaDB\",\"title\":\"MariaDB\",\"description\":\"systems    &quot;<span class=\\\"searchmatch\\\">MariaDB</span> 10.2.13 Release Notes&quot;. <span class=\\\"searchmatch\\\">mariadb</span>.com. 2018-02-13. Retrieved 2018-02-15.   <span class=\\\"searchmatch\\\">MariaDB</span> 10.3.5 Release Notes,<span class=\\\"searchmatch\\\">Maria</span> <span class=\\\"searchmatch\\\">DB</span>.com  &quot;<span class=\\\"searchmatch\\\">MariaDB</span> 10.0.20 Stable&quot;\",\"averageScore\":1929.0},{\"uri\":\"http://dbpedia.org/resource/Turbojet\",\"title\":\"Turbojet\",\"description\":\"The <span class=\\\"searchmatch\\\">turbojet</span> is an airbreathing jet engine, typically used in aircraft. It consists of a gas turbine with a propelling nozzle. The gas turbine has an air\",\"averageScore\":1778.0},{\"uri\":\"http://dbpedia.org/resource/Sewing_machine\",\"title\":\"Sewing machine\",\"description\":\"A <span class=\\\"searchmatch\\\">sewing</span> <span class=\\\"searchmatch\\\">machine</span> is a machine used to stitch fabric and other materials together with thread. <span class=\\\"searchmatch\\\">Sewing</span> <span class=\\\"searchmatch\\\">machines</span> were invented during the first Industrial\",\"averageScore\":1670.0},{\"uri\":\"http://dbpedia.org/resource/MySQL\",\"title\":\"MySQL\",\"description\":\"January 2018.   &quot;<span class=\\\"searchmatch\\\">MySQL</span>: <span class=\\\"searchmatch\\\">MySQL</span> 5.6 Release Notes&quot;. dev.<span class=\\\"searchmatch\\\">mysql</span>.com. Retrieved 15 January 2018.   &quot;<span class=\\\"searchmatch\\\">MySQL</span>: <span class=\\\"searchmatch\\\">MySQL</span> 5.7 Release Notes&quot;. dev.<span class=\\\"searchmatch\\\">mysql</span>.com. Retrieved\",\"averageScore\":1632.0},{\"uri\":\"http://dbpedia.org/resource/Washing_machine\",\"title\":\"Washing machine\",\"description\":\"A <span class=\\\"searchmatch\\\">washing</span> <span class=\\\"searchmatch\\\">machine</span> (laundry machine, clothes washer, or washer) is a device used to wash laundry. The term is mostly applied to machines that use water\",\"averageScore\":1627.0},{\"uri\":\"http://dbpedia.org/resource/OrientDB\",\"title\":\"OrientDB\",\"description\":\"&quot;orientechnologies/<span class=\\\"searchmatch\\\">orientdb</span>&quot;.   &quot;Multi-Model Database - <span class=\\\"searchmatch\\\">OrientDB</span> Manual&quot;.   &quot;DB-Engines Ranking - popularity ranking of graph DBMS&quot;.   &quot;orientechnologies/<span class=\\\"searchmatch\\\">orientdb</span>&quot;. \",\"averageScore\":1365.0},{\"uri\":\"http://dbpedia.org/resource/Turing_machine\",\"title\":\"Turing machine\",\"description\":\"A <span class=\\\"searchmatch\\\">Turing</span> <span class=\\\"searchmatch\\\">machine</span> is a mathematical model of computation that defines an abstract machine, which manipulates symbols on a strip of tape according to a table\",\"averageScore\":655.0},{\"uri\":\"http://dbpedia.org/resource/WinFax\",\"title\":\"WinFax\",\"description\":\"<span class=\\\"searchmatch\\\">WinFax</span> (also known as <span class=\\\"searchmatch\\\">WinFax</span> PRO) is a Microsoft Windows-based software product designed to let computers equipped with fax-modems to communicate directly\",\"averageScore\":612.0},{\"uri\":\"http://dbpedia.org/resource/WebScaleSQL\",\"title\":\"WebScaleSQL\",\"description\":\"and friends create <span class=\\\"searchmatch\\\">WebScaleSQL</span> from MySQL 5.6&quot;. The Register. Retrieved April 1, 2014.   &quot;Frequently Asked Questions&quot;. <span class=\\\"searchmatch\\\">webscalesql</span>.org. March 27, 2014\",\"averageScore\":596.0},{\"uri\":\"http://dbpedia.org/resource/Lawn_mower\",\"title\":\"Lawn mower\",\"description\":\"A <span class=\\\"searchmatch\\\">lawn</span> <span class=\\\"searchmatch\\\">mower</span> (mower) is a machine utilizing one or more revolving blades to cut a grass surface to an even height. The height of the cut grass may be fixed\",\"averageScore\":570.0},{\"uri\":\"http://dbpedia.org/resource/Microsoft_SQL_Server\",\"title\":\"Microsoft SQL Server\",\"description\":\"<span class=\\\"searchmatch\\\">Microsoft</span> <span class=\\\"searchmatch\\\">SQL</span> <span class=\\\"searchmatch\\\">Server</span> is a relational database management system developed by Microsoft. As a database server, it is a software product with the primary\",\"averageScore\":512.0},{\"uri\":\"http://dbpedia.org/resource/SQLite\",\"title\":\"SQLite\",\"description\":\"<span class=\\\"searchmatch\\\">SQLite</span> (/ˌɛskjuːɛlˈlaɪt/ or /ˈsiːkwəl.laɪt/) is a relational database management system contained in a C programming library. In contrast to many other\",\"averageScore\":383.0},{\"uri\":\"http://dbpedia.org/resource/CouchDB\",\"title\":\"CouchDB\",\"description\":\"Apache <span class=\\\"searchmatch\\\">CouchDB</span> is open source database software that focuses on ease of use and having a scalable architecture. It has a document-oriented NoSQL database\",\"averageScore\":233.0},{\"uri\":\"http://dbpedia.org/resource/MongoDB\",\"title\":\"MongoDB\",\"description\":\"documents!  <span class=\\\"searchmatch\\\">MongoDB</span>. &quot;GitHub - <span class=\\\"searchmatch\\\">mongodb</span>/mongo&quot;. GitHub.   Ma, Jason. &quot;Visualizing Your Data With <span class=\\\"searchmatch\\\">MongoDB</span> Compass&quot;. Dzone. Dzone.com.   <span class=\\\"searchmatch\\\">MongoDB</span>. &quot;The AGPL&quot;\",\"averageScore\":230.0},{\"uri\":\"http://dbpedia.org/resource/VoltDB\",\"title\":\"VoltDB\",\"description\":\"html  http://community.<span class=\\\"searchmatch\\\">voltdb</span>.com/node/118#comment-271    Official website <span class=\\\"searchmatch\\\">VoltDB</span> at Open Hub Curt Monash (25 May 2010). &quot;<span class=\\\"searchmatch\\\">VoltDB</span> finally launches&quot;. DBMS\",\"averageScore\":225.0},{\"uri\":\"http://dbpedia.org/resource/IBM_DB2\",\"title\":\"IBM DB2\",\"description\":\"<span class=\\\"searchmatch\\\">IBM</span> <span class=\\\"searchmatch\\\">Db2</span> contains database-server products developed by IBM. These products all support the relational model, but in recent years, some products have been\",\"averageScore\":195.0},{\"uri\":\"http://dbpedia.org/resource/Spinning_mule\",\"title\":\"Spinning mule\",\"description\":\"Play media         The <span class=\\\"searchmatch\\\">spinning</span> <span class=\\\"searchmatch\\\">mule</span> is a machine used to spin cotton and other fibres. They were used extensively from the late 18th to the early 20th\",\"averageScore\":121.0},{\"uri\":\"http://dbpedia.org/resource/Iris_recognition\",\"title\":\"Iris recognition\",\"description\":\"<span class=\\\"searchmatch\\\">Iris</span> <span class=\\\"searchmatch\\\">recognition</span> is an automated method of biometric identification that uses mathematical pattern-recognition techniques on video images of one or both\",\"averageScore\":73.0},{\"uri\":\"http://dbpedia.org/resource/MonetDB\",\"title\":\"MonetDB\",\"description\":\"<span class=\\\"searchmatch\\\">MonetDB</span> is an open source column-oriented database management system developed at the Centrum Wiskunde &amp; Informatica (CWI) in the Netherlands. It was\",\"averageScore\":58.0},{\"uri\":\"http://dbpedia.org/resource/Hot-bulb_engine\",\"title\":\"Hot-bulb engine\",\"description\":\"Play media    The <span class=\\\"searchmatch\\\">hot</span>-<span class=\\\"searchmatch\\\">bulb</span> <span class=\\\"searchmatch\\\">engine</span> is a type of internal combustion engine in which fuel ignites by coming in contact with a red-hot metal surface inside\",\"averageScore\":55.0},{\"uri\":\"http://dbpedia.org/resource/HSQLDB\",\"title\":\"HSQLDB\",\"description\":\"&quot;Software using <span class=\\\"searchmatch\\\">HSQLDB</span>&quot;. <span class=\\\"searchmatch\\\">hsqldb</span>.org.   &quot;<span class=\\\"searchmatch\\\">HSQLDB</span> Documentation&quot;. <span class=\\\"searchmatch\\\">hsqldb</span>.org.   &quot;<span class=\\\"searchmatch\\\">HSQLDB</span> Documentation&quot;. <span class=\\\"searchmatch\\\">hsqldb</span>.org.   &quot;The new <span class=\\\"searchmatch\\\">HSQLDB</span>&quot;. <span class=\\\"searchmatch\\\">hsqldb</span>.org.    Official\",\"averageScore\":47.0},{\"uri\":\"http://dbpedia.org/resource/Stocking_frame\",\"title\":\"Stocking frame\",\"description\":\"A <span class=\\\"searchmatch\\\">stocking</span> <span class=\\\"searchmatch\\\">frame</span> was a mechanical knitting machine used in the textiles industry. It was invented by William Lee of Calverton near Nottingham in 1589.\",\"averageScore\":46.0},{\"uri\":\"http://dbpedia.org/resource/Holden_V8_engine\",\"title\":\"Holden V8 engine\",\"description\":\"The <span class=\\\"searchmatch\\\">Holden</span> <span class=\\\"searchmatch\\\">V8</span> <span class=\\\"searchmatch\\\">engine</span> is an overhead valve (OHV) V8 engine that was produced by the Australian General Motors subsidiary, Holden between 1969 and 2000.\",\"averageScore\":35.0},{\"uri\":\"http://dbpedia.org/resource/IBM_Informix\",\"title\":\"IBM Informix\",\"description\":\"<span class=\\\"searchmatch\\\">IBM</span> <span class=\\\"searchmatch\\\">Informix</span> is a product family within IBM's Information Management division that is centered on several relational database management system (RDBMS)\",\"averageScore\":35.0},{\"uri\":\"http://dbpedia.org/resource/MemSQL\",\"title\":\"MemSQL\",\"description\":\"http://highscalability.com/blog/2012/8/14/<span class=\\\"searchmatch\\\">memsql</span>-architecture-the-fast-mvcc-inmem-lockfree-codegen-and.html (article sponsored by <span class=\\\"searchmatch\\\">MemSQL</span>)  &quot;<span class=\\\"searchmatch\\\">MemSQL</span>&quot;. Retrieved 2017-09-29\",\"averageScore\":32.0},{\"uri\":\"http://dbpedia.org/resource/SQL_Server_Express\",\"title\":\"SQL Server Express\",\"description\":\"Microsoft <span class=\\\"searchmatch\\\">SQL</span> <span class=\\\"searchmatch\\\">Server</span> <span class=\\\"searchmatch\\\">Express</span> is a version of Microsoft's SQL Server relational database management system that is free to download, distribute and use\",\"averageScore\":30.0},{\"uri\":\"http://dbpedia.org/resource/Couchbase_Server\",\"title\":\"Couchbase Server\",\"description\":\"<span class=\\\"searchmatch\\\">Couchbase</span> <span class=\\\"searchmatch\\\">Server</span>, originally known as Membase, is an open-source, distributed (shared-nothing architecture) multi-model NoSQL document-oriented database\",\"averageScore\":23.0},{\"uri\":\"http://dbpedia.org/resource/Cloudant\",\"title\":\"Cloudant\",\"description\":\"<span class=\\\"searchmatch\\\">Cloudant</span> is an IBM software product, which is primarily delivered as a cloud-based service. <span class=\\\"searchmatch\\\">Cloudant</span> is a non-relational, distributed database service\",\"averageScore\":20.0},{\"uri\":\"http://dbpedia.org/resource/Perst\",\"title\":\"Perst\",\"description\":\"versions of <span class=\\\"searchmatch\\\">Perst</span> are <span class=\\\"searchmatch\\\">Perst</span> for .NET, <span class=\\\"searchmatch\\\">Perst</span> for Java and <span class=\\\"searchmatch\\\">Perst</span> Lite. <span class=\\\"searchmatch\\\">Perst</span> for Java and <span class=\\\"searchmatch\\\">Perst</span> Lite are bundled in a single software distribution. <span class=\\\"searchmatch\\\">Perst</span> for \",\"averageScore\":20.0},{\"uri\":\"http://dbpedia.org/resource/Adaptive_Server_Enterprise\",\"title\":\"Adaptive Server Enterprise\",\"description\":\"SAP ASE (<span class=\\\"searchmatch\\\">Adaptive</span> <span class=\\\"searchmatch\\\">Server</span> <span class=\\\"searchmatch\\\">Enterprise</span>), originally known as Sybase SQL Server, and also commonly known as Sybase DB or Sybase ASE, is a relational model\",\"averageScore\":19.0},{\"uri\":\"http://dbpedia.org/resource/Aerial_steam_carriage\",\"title\":\"Aerial steam carriage\",\"description\":\"The <span class=\\\"searchmatch\\\">aerial</span> <span class=\\\"searchmatch\\\">steam</span> <span class=\\\"searchmatch\\\">carriage</span>, also named Ariel, was a flying machine patented in 1842 that was supposed to carry passengers into the air. It was, in practice\",\"averageScore\":18.0},{\"uri\":\"http://dbpedia.org/resource/CUBRID\",\"title\":\"CUBRID\",\"description\":\"<span class=\\\"searchmatch\\\">CUBRID</span> (/ˈkjuːbrɪd/ &quot;cube-rid&quot;) is an open source SQL-based relational database management system (RDBMS) with object extensions developed by Naver Corporation\",\"averageScore\":17.0},{\"uri\":\"http://dbpedia.org/resource/Virtuoso_Universal_Server\",\"title\":\"Virtuoso Universal Server\",\"description\":\"<span class=\\\"searchmatch\\\">Virtuoso</span> <span class=\\\"searchmatch\\\">Universal</span> <span class=\\\"searchmatch\\\">Server</span> is a middleware and database engine hybrid that combines the functionality of a traditional Relational database management system\",\"averageScore\":16.0},{\"uri\":\"http://dbpedia.org/resource/MySQL_Enterprise\",\"title\":\"MySQL Enterprise\",\"description\":\"on <span class=\\\"searchmatch\\\">MySQL</span> <span class=\\\"searchmatch\\\">Enterprise</span>. <span class=\\\"searchmatch\\\">MySQL</span> <span class=\\\"searchmatch\\\">Enterprise</span> contains <span class=\\\"searchmatch\\\">MySQL</span> <span class=\\\"searchmatch\\\">Enterprise</span> Server software, a distribution of the MySQL Server <span class=\\\"searchmatch\\\">MySQL</span> <span class=\\\"searchmatch\\\">Enterprise</span> Monitor <span class=\\\"searchmatch\\\">MySQL</span> Enterprise\",\"averageScore\":16.0},{\"uri\":\"http://dbpedia.org/resource/Oracle_NoSQL_Database\",\"title\":\"Oracle NoSQL Database\",\"description\":\"<span class=\\\"searchmatch\\\">Oracle</span> <span class=\\\"searchmatch\\\">NoSQL</span> <span class=\\\"searchmatch\\\">Database</span> is a NoSQL-type distributed key-value database from Oracle Corporation. It provides transactional semantics for data manipulation\",\"averageScore\":16.0},{\"uri\":\"http://dbpedia.org/resource/Advantage_Database_Server\",\"title\":\"Advantage Database Server\",\"description\":\"<span class=\\\"searchmatch\\\">Advantage</span> <span class=\\\"searchmatch\\\">Database</span> <span class=\\\"searchmatch\\\">Server</span> is a relational database management system (RDBMS) for small to medium-sized businesses by SAP SE (formerly Sybase iAnywhere\",\"averageScore\":15.0},{\"uri\":\"http://dbpedia.org/resource/Ingres_(database)\",\"title\":\"Ingres (database)\",\"description\":\"<span class=\\\"searchmatch\\\">Ingres</span> <span class=\\\"searchmatch\\\">Database</span> (/ɪŋˈɡrɛs/ ing-GRESS) is a commercially supported, open-source SQL relational database management system intended to support large commercial\",\"averageScore\":15.0},{\"uri\":\"http://dbpedia.org/resource/MySQL_Cluster\",\"title\":\"MySQL Cluster\",\"description\":\"<span class=\\\"searchmatch\\\">MySQL</span> <span class=\\\"searchmatch\\\">Cluster</span> is a technology providing shared-nothing clustering and auto-sharding for the MySQL database management system. It is designed to provide\",\"averageScore\":14.0},{\"uri\":\"http://dbpedia.org/resource/Tibero\",\"title\":\"Tibero\",\"description\":\"cluster, TAC. The main products are <span class=\\\"searchmatch\\\">Tibero</span>, <span class=\\\"searchmatch\\\">Tibero</span> MMDB, <span class=\\\"searchmatch\\\">Tibero</span> ProSync, <span class=\\\"searchmatch\\\">Tibero</span> InfiniData and <span class=\\\"searchmatch\\\">Tibero</span> DataHub. <span class=\\\"searchmatch\\\">Tibero</span>, a Relational Database Management\",\"averageScore\":14.0},{\"uri\":\"http://dbpedia.org/resource/MSQL\",\"title\":\"MSQL\",\"description\":\"<span class=\\\"searchmatch\\\">mSQL</span> or Mini SQL is a lightweight database management system from Hughes Technologies.   In 1993–94 David Hughes developed a network monitoring and management\",\"averageScore\":13.0},{\"uri\":\"http://dbpedia.org/resource/Percona_Server\",\"title\":\"Percona Server\",\"description\":\"<span class=\\\"searchmatch\\\">Percona</span> <span class=\\\"searchmatch\\\">Server</span> for MySQL is a distribution of the MySQL relational database management system created by <span class=\\\"searchmatch\\\">Percona</span>. <span class=\\\"searchmatch\\\">Percona</span> <span class=\\\"searchmatch\\\">Server</span> for MySQL is an open source\",\"averageScore\":13.0},{\"uri\":\"http://dbpedia.org/resource/Vectorwise\",\"title\":\"Vectorwise\",\"description\":\"Actian Vector (formerly known as <span class=\\\"searchmatch\\\">VectorWise</span>) is an SQL relational database management system designed for high performance in analytical database applications\",\"averageScore\":12.0},{\"uri\":\"http://dbpedia.org/resource/Apache_Marmotta\",\"title\":\"Apache Marmotta\",\"description\":\"<span class=\\\"searchmatch\\\">Apache</span> <span class=\\\"searchmatch\\\">Marmotta</span> is a linked data platform that comprises several components. In its most basic configuration it is a Linked Data server. Marmotta is one\",\"averageScore\":12.0},{\"uri\":\"http://dbpedia.org/resource/Druid_(open-source_data_store)\",\"title\":\"Druid (open-source data store)\",\"description\":\"Novet, Jordan. &quot;Imply launches with $2M to commercialize the <span class=\\\"searchmatch\\\">Druid</span> <span class=\\\"searchmatch\\\">open</span>-<span class=\\\"searchmatch\\\">source</span> <span class=\\\"searchmatch\\\">data</span> <span class=\\\"searchmatch\\\">store</span>&quot;, VentureBeat, 19 October 2015  Druid Project Documentation \",\"averageScore\":9.0},{\"uri\":\"http://dbpedia.org/resource/Zope_Object_Database\",\"title\":\"Zope Object Database\",\"description\":\"The <span class=\\\"searchmatch\\\">Zope</span> <span class=\\\"searchmatch\\\">Object</span> <span class=\\\"searchmatch\\\">Database</span> (ZODB) is an object-oriented database for transparently and persistently storing Python objects. It is included as part of the\",\"averageScore\":9.0},{\"uri\":\"http://dbpedia.org/resource/Throstle_frame\",\"title\":\"Throstle frame\",\"description\":\"The <span class=\\\"searchmatch\\\">throstle</span> <span class=\\\"searchmatch\\\">frame</span> was a spinning machine for cotton, wool, and other fibers, differing from a mule in having a continuous action, the processes of drawing\",\"averageScore\":8.0},{\"uri\":\"http://dbpedia.org/resource/CSQL\",\"title\":\"CSQL\",\"description\":\"<span class=\\\"searchmatch\\\">CSQL</span> is an open source main memory high-performance relational database management system developed at sourceforge.net. It is designed to provide high\",\"averageScore\":7.0},{\"uri\":\"http://dbpedia.org/resource/Adabas_D\",\"title\":\"Adabas D\",\"description\":\"<span class=\\\"searchmatch\\\">Adabas</span> <span class=\\\"searchmatch\\\">D</span> is a relational database management system owned by Software AG since 1994, when Software AG acquired SQL-Datenbanksysteme GmbH from Siemens Nixdorf\",\"averageScore\":6.0},{\"uri\":\"http://dbpedia.org/resource/Heath_Robinson_(codebreaking_machine)\",\"title\":\"Heath Robinson (codebreaking machine)\",\"description\":\"Heath Robinson was a machine used by British codebreakers at the Government Code and Cypher School (GC&amp;CS) at Bletchley Park during World War II in Cryptanalysis\",\"averageScore\":5.0},{\"uri\":\"http://dbpedia.org/resource/OpenEdge_Advanced_Business_Language\",\"title\":\"OpenEdge Advanced Business Language\",\"description\":\"<span class=\\\"searchmatch\\\">OpenEdge</span> <span class=\\\"searchmatch\\\">Advanced</span> <span class=\\\"searchmatch\\\">Business</span> <span class=\\\"searchmatch\\\">Language</span>, or OpenEdge ABL for short, is a business application development language created and maintained by Progress Software\",\"averageScore\":5.0},{\"uri\":\"http://dbpedia.org/resource/DBEdit\",\"title\":\"DBEdit\",\"description\":\"<span class=\\\"searchmatch\\\">DBEdit</span> 2 is a database editor, which can connect to an Oracle, DB2, MySQL and any database that provides a JDBC driver. It runs on Windows, Linux and Solaris\",\"averageScore\":4.0},{\"uri\":\"http://dbpedia.org/resource/SQream_DB\",\"title\":\"SQream DB\",\"description\":\"<span class=\\\"searchmatch\\\">SQream</span> <span class=\\\"searchmatch\\\">DB</span> is a relational database management system (RDBMS) that uses graphics processing units (GPUs) from Nvidia. <span class=\\\"searchmatch\\\">SQream</span> <span class=\\\"searchmatch\\\">DB</span> is designed for big data\",\"averageScore\":4.0},{\"uri\":\"http://dbpedia.org/resource/Single_Table_Inheritance\",\"title\":\"Single Table Inheritance\",\"description\":\"<span class=\\\"searchmatch\\\">Single</span> <span class=\\\"searchmatch\\\">table</span> <span class=\\\"searchmatch\\\">inheritance</span> is a way to emulate object-oriented inheritance in a relational database. When mapping from a database table to an object in an\",\"averageScore\":3.0},{\"uri\":\"http://dbpedia.org/resource/Dakeyne_hydraulic_disc_engine\",\"title\":\"Dakeyne hydraulic disc engine\",\"description\":\"The <span class=\\\"searchmatch\\\">Dakeyne</span> <span class=\\\"searchmatch\\\">hydraulic</span> <span class=\\\"searchmatch\\\">disc</span> <span class=\\\"searchmatch\\\">engine</span> was a high pressure hydraulic engine built in the 19th century to power a flax mill in Ladygrove, Derbyshire, England\",\"averageScore\":3.0},{\"uri\":\"http://dbpedia.org/resource/Apache_Trafodion\",\"title\":\"Apache Trafodion\",\"description\":\"<span class=\\\"searchmatch\\\">Apache</span> <span class=\\\"searchmatch\\\">Trafodion</span> is an open-source Top-Level Project at the Apache Software Foundation. It was originally developed by the information technology division\",\"averageScore\":3.0},{\"uri\":\"http://dbpedia.org/resource/Cornerstone_(software)\",\"title\":\"Cornerstone (software)\",\"description\":\"Cornerstone is a relational database for MS-DOS by Infocom. It was widely hailed upon its release in 1985 for its ease of use, but is generally considered\",\"averageScore\":2.0},{\"uri\":\"http://dbpedia.org/resource/IBM_DB2_Express-C\",\"title\":\"IBM DB2 Express-C\",\"description\":\"Workgroup Server Edition, Direct and Developer Editions and Express-C.  <span class=\\\"searchmatch\\\">IBM</span> <span class=\\\"searchmatch\\\">DB2</span> <span class=\\\"searchmatch\\\">Express</span>-<span class=\\\"searchmatch\\\">C</span> is a free to download, use and redistribute edition of the IBM DB2\",\"averageScore\":2.0},{\"uri\":\"http://dbpedia.org/resource/Hector_(API)\",\"title\":\"Hector (API)\",\"description\":\"Hector is a high-level client API for Apache Cassandra. Named after Hector, a warrior of Troy in Greek mythology, it is a substitute for the Cassandra\",\"averageScore\":2.0},{\"uri\":\"http://dbpedia.org/resource/Transbase\",\"title\":\"Transbase\",\"description\":\"<span class=\\\"searchmatch\\\">Transbase</span> is a relational database management system, developed and maintained by Transaction Software GmbH, Munich. The development of <span class=\\\"searchmatch\\\">Transbase</span> was\",\"averageScore\":2.0},{\"uri\":\"http://dbpedia.org/resource/Strozzi_NoSQL\",\"title\":\"Strozzi NoSQL\",\"description\":\"<span class=\\\"searchmatch\\\">Strozzi</span> <span class=\\\"searchmatch\\\">NoSQL</span> is a shell-based relational database management system initialized and developed by Carlo Strozzi that runs under Unix-like operating systems\",\"averageScore\":2.0}]"
						}
					]
				},
				{
					"name": "Add software solution",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uri\" : \"http://dbpedia.org/resource/Relational_database\",\n    \"title\": \"testDB\",\n    \"description\": \"This is a testing relational database.\"\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/addSoftware",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"addSoftware"
							]
						},
						"description": "This endpoint is used to create a new software solution. \n\nIt accepts a JSON object describing the solution. The solution will be saved and can be retrieved."
					},
					"response": []
				},
				{
					"name": "Remove software solution",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uri\" : \"http://dbpedia.org/resource/Relational_database\",\n    \"title\": \"testDB\"\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/removeSoftware",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"removeSoftware"
							]
						},
						"description": "This endpoint is used to delete a software solution. \n\nIt accepts a JSON object of the solution to be deleted. After deletion, the software solution will not be suggested anymore."
					},
					"response": []
				},
				{
					"name": "Get alternative solutions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uri\": \"http://dbpedia.org/resource/Java_Platform,_Enterprise_Edition\"\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/getAlternatives",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"getAlternatives"
							]
						},
						"description": "This endpoint is used to find alternative solutions for an architectural topic. \n\nIt accepts a JSON object containing an architectural element in the `uri`. A list of alternative solutions will be returned.\n\n//Add an example response"
					},
					"response": []
				},
				{
					"name": "Add alternative solution",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uri\" : \"http://dbpedia.org/resource/Relational_database\",\n    \"title\": \"Test Alternative\",\n    \"description\": \"Test Alternative description\"\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/addAlternative",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"addAlternative"
							]
						},
						"description": "This endpoint is used to create a new alternative solution. \n\nIt accepts a JSON object describing the solution. The solution will be saved and can be retrieved."
					},
					"response": []
				},
				{
					"name": "Remove alternative solution",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"uri\": \"http://dbpedia.org/resource/Relational_database\",\n    \"title\": \"Test Alternative\"\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/removeAlternative",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"removeAlternative"
							]
						},
						"description": "This endpoint is used to delete an alternative solution. \n\nIt accepts a JSON object of the solution to be deleted. After deletion, the solution will not be suggested anymore."
					},
					"response": []
				}
			]
		},
		{
			"name": "Editor",
			"description": null,
			"item": [
				{
					"name": "Upload file",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"type": "file",
									"value": ""
								}
							]
						},
						"url": {
							"raw": "{{SERVER_URL}}/getFileContent",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"getFileContent"
							]
						},
						"description": "This endpoint is used to upload a file for annotation."
					},
					"response": []
				},
				{
					"name": "Create session",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{SERVER_URL}}/createSession",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"createSession"
							]
						},
						"description": "This endpoint is used to create a new session."
					},
					"response": [
						{
							"id": "5725e418-6d09-4861-a373-78be668cbf04",
							"name": "Create session example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{SERVER_URL}}/createSession",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"createSession"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "64",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 08 May 2018 20:12:06 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "{\"session\":\"661b2fa5-e713-4468-a1c9-6a1a6be670d0\",\"status\":\"OK\"}"
						}
					]
				},
				{
					"name": "Get all annotations",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/annotations",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"annotations"
							]
						},
						"description": "This endpoint is used to retrieve all annotations of the uploaded file."
					},
					"response": []
				},
				{
					"name": "Get annotation by hash",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/paragraph/:paragraphHash/annotations",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"paragraph",
								":paragraphHash",
								"annotations"
							],
							"variable": [
								{
									"key": "paragraphHash",
									"value": "{{PARAGRAPH_HASH}}"
								}
							]
						},
						"description": "This endpoint is used to retrieve annotations by file hash."
					},
					"response": []
				},
				{
					"name": "Create annotation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"paragraphHash\": \"testHash\",\n\t\"token\": \"testToken\",\n\t\"type\": \"test\",\n\t\"offsets\": null\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/annotation",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"annotation"
							]
						},
						"description": "This endpoint is used to create a new annotation for the uploaded file. This annotation will be retrieved when annotating the same file.\n\nIt accepts a JSON object with `paragraphHash`, `token`, `type`, `offsets`. `offsets` can have `begin` and `end` values."
					},
					"response": []
				},
				{
					"name": "Update annotation",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"testToken\",\n  \"type\": \"test\",\n  \"offsets\": null\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/annotation/:annotationId",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"annotation",
								":annotationId"
							],
							"variable": [
								{
									"key": "annotationId",
									"value": "{{ANNOTATION_ID}}",
									"description": "This is a hexadecimal value."
								}
							]
						},
						"description": "This endpoint is used to update an annotation of the uploaded file. \n\nThe request body is a JSON object with `token`, `type`, `offsets`. `offsets` can have `begin` and `end` values."
					},
					"response": []
				},
				{
					"name": "Delete annotation",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{SERVER_URL}}/annotation/:annotationId",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"annotation",
								":annotationId"
							],
							"variable": [
								{
									"key": "annotationId",
									"value": "{{ANNOTATION_ID}}",
									"description": "This is a hexadecimal value."
								}
							]
						},
						"description": "This endpoint is used to delete an annotation of the uploaded file.\n\nIt accepts `annotationId` as a path parameter."
					},
					"response": []
				}
			]
		},
		{
			"name": "Data processing",
			"description": "",
			"item": [
				{
					"name": "Update task with quality attributes",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/updateTaskWithQA?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"updateTaskWithQA"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to extract quality attributes from all design decisions. Quality attributes will be extracted from `summary` and `description` fields of each design decision. This information will be stored in the database and can be retrieved in the project analysis views.\n\nIt accepts the project key as the parameter."
					},
					"response": []
				},
				{
					"name": "Update task with architectural elements",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/updateTaskWithAE?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"updateTaskWithAE"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to extract architectural elements from all design decisions. Architectural elements will be extracted from `summary` and `description` fields of each design decision. This information will be stored in the database and can be retrieved in the project analysis views.\n\nIt accepts the project key as the parameter."
					},
					"response": []
				},
				{
					"name": "Label design decisions",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/labelDesignDecisions?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"labelDesignDecisions"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to categorize all design decisions. Each design decision will be categorized into structural, behavioral or no-existence decision. This information will be stored in the database and can be retrieved in the project analysis views.\n\nIt accepts the project key as the parameter."
					},
					"response": []
				},
				{
					"name": "Update similar documents",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/updateSimilarDocuments?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"updateSimilarDocuments"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to cluster similar design decisions. Design decisions will be clustered based on the marchine learning pipeline established in [DocClustering](https://github.com/sebischair/DocClusteringWorkbench) component. This information will be stored in the database and can be retrieved in the design decision analysis view.\n\nIt accepts the project key as the parameter."
					},
					"response": []
				}
			]
		},
		{
			"name": "Views",
			"description": "",
			"item": [
				{
					"name": "Get projects",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/project",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"project"
							]
						},
						"description": "This endpoint is used to retrieve all projects. \n\nAn array of objects will be returned. Each object represents a project. In each project, there are `name`, `description`, `shortDescription`, `self`, `key`, `projectCategory`, `concepts`, `preProcessed`, `issuesCount`, `decisionCount` fields."
					},
					"response": []
				},
				{
					"name": "Get project",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/project/:key",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"project",
								":key"
							],
							"variable": [
								{
									"key": "key",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to retrieve data of one project. \n\nIt accepts the project key as a parameter. The project information will be returned as a JSON object, which has `name`, `description`, `shortDescription`, `self`, `key`, `projectCategory`, `concepts`, `preProcessed`, `issuesCount`, `decisionCount` fields."
					},
					"response": [
						{
							"id": "4d5cd0ed-1dd6-49bf-abdb-d35b9c2a41d5",
							"name": "Get project example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{SERVER_URL}}/project/:key",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"project",
										":key"
									],
									"variable": [
										{
											"key": "key",
											"value": "{{PROJECT_KEY}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "891",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 14 May 2018 09:36:13 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "{\"name\":\"Spark\",\"description\":\"Apache Spark is a fast and general cluster computing system. It provides high-level APIs in Scala, Java, Python and R, and an optimized engine that supports general computation graphs. It also supports a rich set of higher-level tools including Spark SQL for SQL and structured data processing, MLLib for machine learning, GraphX for graph processing, and Spark Streaming.\",\"shortDescription\":\"Apache Spark is a fast and general cluster computing system. It provides high-level APIs in Scala, Java, Python and R, and an optimized engine that su …\",\"self\":\"https://issues.apache.org/jira/rest/api/2/project/12315420\",\"key\":\"SPARK\",\"projectCategory\":\"Apache Software Foundation\",\"concepts\":[\"machine learning\",\"SQL\",\"Apache Spark\",\"Java\",\"Scala\",\"Python\",\"graph\",\"application programming interface\"],\"preProcessed\":true,\"issuesCount\":22279,\"decisionCount\":463}"
						}
					]
				},
				{
					"name": "Create project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"testProject\",\n    \"description\": \"This is a test project\",\n    \"key\": \"testKey\"\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/project",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"project"
							]
						},
						"description": "This endpoint is used to create a project. \n\nIt accepts a JSON object with `name`, `description` and `key`. The project information plus the project id will be returned."
					},
					"response": [
						{
							"id": "8fa5fd74-9b0a-43e0-a5af-ad779e79ab4f",
							"name": "Create project example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"testProject\",\n    \"description\": \"This is a test project\",\n    \"key\": \"testKey\"\n}"
								},
								"url": {
									"raw": "{{SERVER_URL}}/project",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"project"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "93",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Tue, 08 May 2018 18:39:57 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "{\"name\":\"testProject\",\"description\":\"This is a test project\",\"id\":\"5af1eefdd7631322d1ea5676\"}"
						}
					]
				},
				{
					"name": "Get quality attributes for project",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/getDataForQAV?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"getDataForQAV"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to retrieve quality attributes information of a project. Example of quality attributes: availability, performance, security, etc.\n\nIt accepts the project key as a parameter. An array of objects will be returned. Each object represents one quality attribute, including how many design decisions address it each year as well as the total number."
					},
					"response": [
						{
							"id": "aec94743-41a8-482e-b857-06a98d693997",
							"name": "Get quality attributes for project example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{SERVER_URL}}/getDataForQAV?projectKey={{PROJECT_KEY}}",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"getDataForQAV"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "{{PROJECT_KEY}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "3789",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 13 May 2018 22:10:32 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "[\n\t{\n        \"id\": \"Availability\",\n        \"value\": [\n            5,\n            12,\n            4\n        ],\n        \"values\": [\n            {\n                \"year\": 2013,\n                \"value\": [\n                    0,\n                    0,\n                    0\n                ]\n            },\n            {\n                \"year\": 2014,\n                \"value\": [\n                    0,\n                    0,\n                    0\n                ]\n            },\n            {\n                \"year\": 2015,\n                \"value\": [\n                    0,\n                    4,\n                    1\n                ]\n            },\n            {\n                \"year\": 2016,\n                \"value\": [\n                    4,\n                    10,\n                    4\n                ]\n            },\n            {\n                \"year\": 2017,\n                \"value\": [\n                    5,\n                    12,\n                    4\n                ]\n            }\n        ]\n    },\n    {\n        \"id\": \"Maintainability\",\n        \"value\": [\n            4,\n            1,\n            1\n        ],\n        \"values\": [\n            {\n                \"year\": 2013,\n                \"value\": [\n                    0,\n                    0,\n                    0\n                ]\n            },\n            {\n                \"year\": 2014,\n                \"value\": [\n                    0,\n                    0,\n                    0\n                ]\n            },\n            {\n                \"year\": 2015,\n                \"value\": [\n                    2,\n                    0,\n                    1\n                ]\n            },\n            {\n                \"year\": 2016,\n                \"value\": [\n                    4,\n                    1,\n                    1\n                ]\n            },\n            {\n                \"year\": 2017,\n                \"value\": [\n                    4,\n                    1,\n                    1\n                ]\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Get all quality attributes",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/getAllQAV",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"getAllQAV"
							]
						},
						"description": "This endpoint is used to retrieve all quality attributes from the database."
					},
					"response": [
						{
							"id": "b5eee55a-9670-4d0e-9e1d-e0de23808f53",
							"name": "Get all quality attributes example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{SERVER_URL}}/getAllQAV",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"getAllQAV"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "284",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 14 May 2018 10:28:11 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "[\"Analyzability\",\"Adaptability\",\"Suitability\",\"Scalability\",\"Composability\",\"Availability\",\"Accuracy\",\"Portability\",\"Functionality\",\"Maintainability\",\"Understandability\",\"Testability\",\"Security\",\"Usability\",\"Extensibility\",\"Performance\",\"Reliability\",\"Interoperability\",\"Reusability\"]"
						}
					]
				},
				{
					"name": "Get architectural elements for project",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/getDataForAEV?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"getDataForAEV"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to retrieve architectural elements information of a project. Example of architectural elements: SQL, API, Java, etc.\n\nIt accepts the project key as a parameter. An array of objects will be returned. Each object represents one architectural element, including how many design decisions address it each year as well as the total number."
					},
					"response": [
						{
							"id": "f6db202d-99e0-433e-8c24-e9cce29327ba",
							"name": "Get architectural elements for project example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{SERVER_URL}}/getDataForAEV?projectKey={{PROJECT_KEY}}",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"getDataForAEV"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "{{PROJECT_KEY}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "21289",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 14 May 2018 10:14:40 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "[\n\t {\n        \"id\": \"Apache Spark\",\n        \"value\": 13,\n        \"values\": [\n            {\n                \"year\": 2013,\n                \"value\": 0\n            },\n            {\n                \"year\": 2014,\n                \"value\": 0\n            },\n            {\n                \"year\": 2015,\n                \"value\": 4\n            },\n            {\n                \"year\": 2016,\n                \"value\": 12\n            },\n            {\n                \"year\": 2017,\n                \"value\": 13\n            }\n        ]\n    },\n    {\n        \"id\": \"backward compatibility\",\n        \"value\": 3,\n        \"values\": [\n            {\n                \"year\": 2013,\n                \"value\": 0\n            },\n            {\n                \"year\": 2014,\n                \"value\": 0\n            },\n            {\n                \"year\": 2015,\n                \"value\": 0\n            },\n            {\n                \"year\": 2016,\n                \"value\": 2\n            },\n            {\n                \"year\": 2017,\n                \"value\": 3\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Get developer expertise",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/getAssignee?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"getAssignee"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to retrieve developer expertise information of a project. The expertise score is calculated based on assignees of design decisions.\n\nIt accepts the project key as a parameter. An array of objects will be returned. Each object contains `personName`, `conceptName` and `value`."
					},
					"response": [
						{
							"id": "3bdc92bd-4656-4415-a634-6b8f2f05732a",
							"name": "Get developer expertise example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{SERVER_URL}}/getAssignee?projectKey={{PROJECT_KEY}}",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"getAssignee"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "{{PROJECT_KEY}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "26676",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 14 May 2018 10:38:39 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "[\n\t    {\n        \"personName\": \"cody@koeninger.org\",\n        \"conceptName\": \"apache spark\",\n        \"value\": 1\n    },\n    {\n        \"personName\": \"cody@koeninger.org\",\n        \"conceptName\": \"backward compatibility\",\n        \"value\": 1\n    },\n    {\n        \"personName\": \"cody@koeninger.org\",\n        \"conceptName\": \"kafka\",\n        \"value\": 1\n    },\n    {\n        \"personName\": \"cody@koeninger.org\",\n        \"conceptName\": \"api\",\n        \"value\": 1\n    },\n    {\n        \"personName\": \"joshrosen\",\n        \"conceptName\": \"java\",\n        \"value\": 1\n    },\n    {\n        \"personName\": \"joshrosen\",\n        \"conceptName\": \"oss\",\n        \"value\": 1\n    },\n    {\n        \"personName\": \"joshrosen\",\n        \"conceptName\": \"git\",\n        \"value\": 2\n    },\n    {\n        \"personName\": \"joshrosen\",\n        \"conceptName\": \"doc\",\n        \"value\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Recommend experts",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/predictAssignee?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"predictAssignee"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to get expert recommendations for design decisions of a project. For each design decision, five experts will be recommended based on their expertise score.\n\nIt accepts the project key as a parameter. An array of objects will be returned. Each object represents one design decision, with `predictions` field containing an array of five expert recommendations."
					},
					"response": [
						{
							"id": "46071bd4-3797-4064-bb41-f8dc180cca8b",
							"name": "Recommend experts example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{SERVER_URL}}/predictAssignee?projectKey={{PROJECT_KEY}}",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"predictAssignee"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "{{PROJECT_KEY}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "28965",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 14 May 2018 10:47:03 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "[\n\t{\n        \"text\": \"Implement code generation for Generate {{Generate}} currently does not support code generation. Lets add support for CG and for it and its most important generators: {{explode}} and {{json_tuple}}.\",\n        \"assignee\": \"herman van hovell\",\n        \"resolved\": \"2016-11-20T07:54:22.000+0000\",\n        \"predictions\": [\n            {\n                \"personName\": \"reynold xin\",\n                \"score\": 156\n            },\n            {\n                \"personName\": \"davies liu\",\n                \"score\": 84\n            },\n            {\n                \"personName\": \"josh rosen\",\n                \"score\": 76\n            },\n            {\n                \"personName\": \"yanbo liang\",\n                \"score\": 72\n            },\n            {\n                \"personName\": \"xiao li\",\n                \"score\": 44\n            }\n        ]\n    },\n    {\n        \"text\": \"Add --conf to mesos dispatcher process Sometimes we simply need to add a property in Spark Config for the Mesos Dispatcher. The only option right now is to created a property file\",\n        \"assignee\": \"stavros kontopoulos\",\n        \"resolved\": \"2016-11-20T00:05:37.000+0000\",\n        \"predictions\": [\n            {\n                \"personName\": \"reynold xin\",\n                \"score\": 162\n            },\n            {\n                \"personName\": \"yanbo liang\",\n                \"score\": 99\n            },\n            {\n                \"personName\": \"davies liu\",\n                \"score\": 82\n            },\n            {\n                \"personName\": \"josh rosen\",\n                \"score\": 74\n            },\n            {\n                \"personName\": \"xiao li\",\n                \"score\": 61\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Get filtered design decisions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"projectKey\": \"SPARK\",\n\t\"viz\": \"qa\",\n\t\"attrName\": \"Security\",\n\t\"segmentName\": \"Structural decision\"\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/getDataForDDV",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"getDataForDDV"
							]
						},
						"description": "This endpoint is used to get filtered design decisions. They can be filtered by project, quality attributes or architectural elements. \n\nIt accepts a JSON object as request body. This object contains `projectKey`, `viz`, which can be either `qa`(quality attributes), or `ae`(architectural elements). \n\nTo filter quality attributes, set `attrName` to the quality attribute you want to filter, and set `segmentName` to \"Structural decision\", \"Behavioral decision\" or \"Non-existence - ban decision\".\n\nTO filter architectural elements, set `attrName` to the element you want to filter."
					},
					"response": [
						{
							"id": "44feb0a2-12c6-4054-bc47-09afa6238cbb",
							"name": "Get filtered design decisions example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": false
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"projectKey\": \"SPARK\",\n\t\"viz\": \"qa\",\n\t\"attrName\": \"Security\",\n\t\"segmentName\": \"Structural decision\"\n}"
								},
								"url": {
									"raw": "{{SERVER_URL}}/getDataForDDV",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"getDataForDDV"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "11686",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 14 May 2018 11:28:35 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "[{\"name\":\"SPARK-12585\",\"summary\":\"The numFields of UnsafeRow should not changed by pointTo()\",\"description\":\"Right now, numFields will be passed in by pointTo(), then bitSetWidthInBytes is calculated, making pointTo() a little bit heavy.\\n\\nIt should be part of constructor of UnsafeRow.\",\"shortDescription\":\"Right now, numFields will be passed in by pointTo(), then bitSetWidthInBytes is calculated, making pointTo() a little bit heavy.\\n\\nIt should be part of …\",\"created\":\"2015-12-30T18:26:49.000+0000\",\"resolved\":\"2015-12-31T06:16:50.000+0000\",\"belongsTo\":\"SPARK\",\"issueType\":\"Improvement\",\"status\":\"Resolved\",\"resolution\":\"Fixed\",\"priority\":\"Major\",\"assignee\":\"apachespark\",\"reporter\":\"davies\",\"designDecision\":true,\"decisionCategory\":\"Structural decision\",\"concepts\":\"bitset\",\"keywords\":[\"pointto\",\"unsaferow\",\"heavy\",\"constructor\",\"numfields\",\"C\",\"struct\",\"byte\",\"bitset\",\"bits\",\"field\",\"bytes\",\"fields\",\"EL\",\"thin\",\"late\",\"point\",\"unsafe\",\"Change\",\"safe\"],\"qualityAttributes\":\"Security\",\"similarDocuments\":[{\"summary\":\"numFields of UnsafeRow should not changed by pointTo\",\"name\":\"SPARK-12585\",\"description\":\"now  numFields will be passed in by pointTo    then bitSetWidthInBytes is calculated  making pointTo   a little bit heavy   It should be part of constructor of UnsafeRow\",\"jaccardsimilarity\":\"92.86\",\"cosinesimilarity\":\"100.00\"}]},{\"name\":\"SPARK-7131\",\"summary\":\"Move tree,forest implementation from spark.mllib to spark.ml\",\"description\":\"We want to change and improve the spark.ml API for trees and ensembles, but we cannot change the old API in spark.mllib.  To support the changes we want to make, we should move the implementation from spark.mllib to spark.ml.  We will generalize and modify it, but will also ensure that we do not change the behavior of the old API.\\n\\nThere are several steps to this:\\n1. Copy the implementation over to spark.ml and change the spark.ml classes to use that implementation, rather than calling the spark.mllib implementation.  The current spark.ml tests will ensure that the 2 implementations learn exactly the same models.  Note: This should include performance testing to make sure the updated code does not have any regressions. --> *UPDATE*: I have run tests using spark-perf, and there were no regressions.\\n2. Remove the spark.mllib implementation, and make the spark.mllib APIs wrappers around the spark.ml implementation.  The spark.ml tests will again ensure that we do not change any behavior.\\n3. Move the unit tests to spark.ml, and change the spark.mllib unit tests to verify model equivalence.\\n\\nThis JIRA is now for step 1 only.  Steps 2 and 3 will be in separate JIRAs.\\n\\nAfter these updates, we can more safely generalize and improve the spark.ml implementation.\",\"shortDescription\":\"We want to change and improve the spark.ml API for trees and ensembles, but we cannot change the old API in spark.mllib.  To support the changes we wa …\",\"created\":\"2015-04-24T19:28:30.000+0000\",\"resolved\":\"2015-07-17T05:27:13.000+0000\",\"belongsTo\":\"SPARK\",\"issueType\":\"Improvement\",\"status\":\"Resolved\",\"resolution\":\"Fixed\",\"priority\":\"Major\",\"assignee\":\"josephkb\",\"reporter\":\"josephkb\",\"designDecision\":true,\"decisionCategory\":\"Structural decision\",\"concepts\":[\"Steps\",\"API\",\"APIs\",\"JIRA\"],\"keywords\":[\"implementation rather than calling the spark mllib implementation\",\"mllib implementation and make the spark mllib\",\"tests will ensure that the implementations learn exactly the same models\",\"implementation from spark mllib\",\"implementation\",\"mllib\",\"steps\",\"models\",\"tests\",\"JIRA\",\"unit\",\"equivalence\",\"behavior\",\"separate\",\"regressions\",\"updates\",\"performance\",\"tree\",\"perf\",\"code\",\"C\",\"impl\",\"Test\",\"trees\",\"step\",\"APIs\",\"wrappers\",\"classes\",\"gain\",\"EL\",\"rate\",\"class\",\"form\",\"implementations\",\"support\",\"ensembles\",\"copy\",\"Note\",\"wrap\",\"General\",\"regression\",\"DO NOT\",\"port\",\"testing\",\"mode\",\"call\",\"wrapper\",\"REST\",\"move\",\"model\",\"Change\",\"current\"],\"qualityAttributes\":[\"Performance\",\"Maintainability\",\"Accuracy\",\"Security\"],\"similarDocuments\":[{\"summary\":\"tree forest implementation from spark mllib to spark ml\",\"name\":\"SPARK-7131\",\"description\":\"want to change and improve the spark ml API for trees and ensembles  but we cannot change the old API in spark mllib   To support the changes we want to make  we should move the implementation from spark mllib to spark ml   We will generalize and modify it  but will also ensure that we do not change the behavior of the old API   There are several steps to this  1  Copy the implementation over to spark ml and change the spark ml classes to use that implementation  rather than calling the spark mllib implementation   The current spark ml tests will ensure that the 2 implementations learn exactly the same models   Note  This should include performance testing to make sure the updated code does not have any regressions       UPDATE   I have run tests using spark perf  and there were no regressions  2  Remove the spark mllib implementation  and make the spark mllib APIs wrappers around the spark ml implementation   The spark ml tests will again ensure that we do not change any behavior  3  Move the unit tests to spark ml  and change the spark mllib unit tests to verify model equivalence   This JIRA is now for step 1 only   Steps 2 and 3 will be in separate JIRAs   After these updates  we can more safely generalize and improve the spark ml implementation\",\"jaccardsimilarity\":\"98.18\",\"cosinesimilarity\":\"100.00\"}]},{\"name\":\"SPARK-9815\",\"summary\":\"Rename PlatformDependent.UNSAFE -> Platform\",\"description\":\"PlatformDependent.UNSAFE is way too verbose.\\n\",\"shortDescription\":\"PlatformDependent.UNSAFE is way too verbose.\\n\",\"created\":\"2015-08-11T05:01:19.000+0000\",\"resolved\":\"2015-08-11T15:41:51.000+0000\",\"belongsTo\":\"SPARK\",\"issueType\":\"Improvement\",\"status\":\"Resolved\",\"resolution\":\"Fixed\",\"priority\":\"Major\",\"assignee\":\"rxin\",\"reporter\":\"rxin\",\"designDecision\":true,\"decisionCategory\":\"Structural decision\",\"concepts\":\"\",\"keywords\":[\"unsafe\",\"platformdependent\",\"platform\",\"verbose\",\"form\",\"OS\"],\"qualityAttributes\":\"Security\",\"similarDocuments\":[{\"summary\":\"PlatformDependent UNSAFE    Platform\",\"name\":\"SPARK-9815\",\"description\":\"PlatformDependent UNSAFE is way too verbose\",\"jaccardsimilarity\":\"83.33\",\"cosinesimilarity\":\"100.00\"}]},{\"name\":\"SPARK-16751\",\"summary\":\"Upgrade derby to 10.12.1.1 from 10.11.1.1\",\"description\":\"This JIRA is to upgrade the derby version from 10.11.1.1 to 10.12.1.1\\n\\nSean and I figured that we only use derby for tests and so the initial pull request was to not include it in the jars folder for Spark. I now believe it is required based on comments for the pull request and so this is only a dependency upgrade.\\n\\nThe upgrade is due to an already disclosed vulnerability (CVE-2015-1832) in derby 10.11.1.1. We used https://www.versioneye.com/search and will be checking for any other problems in a variety of libraries too: investigating if we can set up a Jenkins job to check our pom on a regular basis so we can stay ahead of the game for matters like this.\\n\\nThis was raised on the mailing list at http://apache-spark-developers-list.1001551.n3.nabble.com/VOTE-Release-Apache-Spark-2-0-0-RC5-tp18367p18465.html by Stephen Hellberg and replied to by Sean Owen.\\n\\nI've checked the impact to previous Spark releases and this particular version of derby is the only relatively recent and without vulnerabilities version (I checked up to the 1.3 branch) so ideally we'd backport this for all impacted Spark releases.\\n\\nI've marked this as critical and ticked the important checkbox as it's going to impact every user, there isn't a security component (should we add one?) and hence the build tag.\",\"shortDescription\":\"This JIRA is to upgrade the derby version from 10.11.1.1 to 10.12.1.1\\n\\nSean and I figured that we only use derby for tests and so the initial pull req …\",\"created\":\"2016-07-27T12:52:36.000+0000\",\"resolved\":\"2016-07-29T11:46:39.000+0000\",\"belongsTo\":\"SPARK\",\"issueType\":\"Bug\",\"status\":\"Resolved\",\"resolution\":\"Fixed\",\"priority\":\"Major\",\"assignee\":\"aroberts\",\"reporter\":\"aroberts\",\"designDecision\":true,\"decisionCategory\":\"Structural decision\",\"concepts\":[\"Owen I\",\"backport\",\"JIRA\",\"Apache\",\"Test\",\"HTTP\",\"port\",\"HTTPS\",\"URI\",\"KB\",\"Apache Spark\",\"ant\",\"IDE\",\"REPL\",\"HTML\",\"Job\",\"Derby\"],\"keywords\":[\"releases i ve marked this as critical and ticked the important checkbox\",\"list at http apache\",\"release apache\",\"libraries too investigating if we can set up a jenkins job to check our pom on a regular\",\"derby we used https\",\"release\",\"derby\",\"Apache\",\"https\",\"list\",\"checkbox\",\"jenkins\",\"regular\",\"critical\",\"libraries\",\"version\",\"user\",\"basis\",\"variety\",\"vulnerability\",\"C\",\"component\",\"check\",\"comments\",\"vote\",\"mailing\",\"Request\",\"ease\",\"impact\",\"Test\",\"nabble\",\"init\",\"Mail\",\"problems\",\"based\",\"releases\",\"IDE\",\"step\",\"comment\",\"mark\",\"base\",\"HTML\",\"JIRA\",\"branch\",\"upgrade\",\"close\",\"tests\",\"port\",\"HTTP\",\"jars\",\"Read\",\"vulnerabilities\",\"developers\",\"marked\",\"search\",\"EL\",\"developer\",\"VERY\",\"Dependency\",\"ability\",\"head\",\"OS\",\"checking\",\"idea\",\"previous\",\"problem\",\"security\"],\"qualityAttributes\":\"Security\",\"similarDocuments\":[]},{\"name\":\"SPARK-18034\",\"summary\":\"Upgrade to MiMa 0.1.11\",\"description\":\"We should upgrade to the latest release of MiMa (0.1.11) in order to include my fix for a bug which led to flakiness in the MiMa checks (https://github.com/typesafehub/migration-manager/issues/115)\",\"shortDescription\":\"We should upgrade to the latest release of MiMa (0.1.11) in order to include my fix for a bug which led to flakiness in the MiMa checks (https://githu …\",\"created\":\"2016-10-20T20:04:40.000+0000\",\"resolved\":\"2016-10-21T18:25:33.000+0000\",\"belongsTo\":\"SPARK\",\"issueType\":\"Bug\",\"status\":\"Resolved\",\"resolution\":\"Fixed\",\"priority\":\"Major\",\"assignee\":\"joshrosen\",\"reporter\":\"joshrosen\",\"designDecision\":true,\"decisionCategory\":\"Structural decision\",\"concepts\":[\"Test\",\"HTTP\",\"GitHub\",\"HTTPS\",\"Git\"],\"keywords\":[\"typesafehub\",\"GitHub\",\"mima\",\"migration\",\"checks\",\"manager\",\"flakiness\",\"Issues\",\"order\",\"release\",\"upgrade\",\"C\",\"check\",\"late\",\"Test\",\"HTTP\",\"EL\",\"https\",\"issue\",\"types\",\"type\"],\"qualityAttributes\":\"Security\",\"similarDocuments\":[]},{\"name\":\"SPARK-14897\",\"summary\":\"Upgrade Jetty to latest version of 8/9\",\"description\":\"It looks like the head/master branch of Spark uses quite an old version of Jetty: 8.1.14.v20131031\\n\\nThere have been some announcement of security vulnerabilities, notably in 2015 and there are versions of both 8 and 9 that address those. We recently left a web-ui port open and had the server compromised within days. Albeit, this upgrade shouldn't be the only security improvement made, the current version is clearly vulnerable, as-is.\\n\",\"shortDescription\":\"It looks like the head/master branch of Spark uses quite an old version of Jetty: 8.1.14.v20131031\\n\\nThere have been some announcement of security vuln …\",\"created\":\"2016-04-25T18:14:48.000+0000\",\"resolved\":\"2016-05-12T19:07:58.000+0000\",\"belongsTo\":\"SPARK\",\"issueType\":\"Improvement\",\"status\":\"Resolved\",\"resolution\":\"Fixed\",\"priority\":\"Major\",\"assignee\":\"mengbo\",\"reporter\":\"adamjk\",\"designDecision\":true,\"decisionCategory\":\"Structural decision\",\"concepts\":[\"Test\",\"port\",\"URI\",\"web ui\"],\"keywords\":[\"security vulnerabilities notably in and there are versions\",\"upgrade jetty to latest version\",\"version is clearly vulnerable\",\"version of jetty\",\"version\",\"security\",\"upgrade\",\"vulnerabilities\",\"jetty\",\"days\",\"Server\",\"open\",\"shouldn\",\"port\",\"address\",\"improvement\",\"current\",\"announcement\",\"head\",\"branch\",\"C\",\"late\",\"clear\",\"Test\",\"master\",\"versions\",\"Web\",\"OS\",\"thin\"],\"qualityAttributes\":[\"Understandability\",\"Availability\",\"Security\"],\"similarDocuments\":[]}]"
						}
					]
				},
				{
					"name": "Get all design decisions",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/designDecisions?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"designDecisions"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to retrieve all processed design decisions of a project.\n\nIt accepts the project key as a parameter. An array of objects will be returned. Each object represents one processed design decision with all important data, including `decisionCategory`, `concepts`, `qualityAttributes`, `similarDocuments`."
					},
					"response": [
						{
							"id": "6ddfacff-8b49-4961-86ca-31ea3790c1a9",
							"name": "Get all design decisions example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{SERVER_URL}}/designDecisions?projectKey={{PROJECT_KEY}}",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"designDecisions"
									],
									"query": [
										{
											"key": "projectKey",
											"value": "{{PROJECT_KEY}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "962627",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Mon, 14 May 2018 10:55:20 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "[\n\t {\n        \"name\": \"SPARK-12177\",\n        \"summary\": \"Update KafkaDStreams to new Kafka 0.10 Consumer API\",\n        \"description\": \"Kafka 0.9 already released and it introduce new consumer API that not compatible with old one. So, I added new consumer api. I made separate classes in package org.apache.spark.streaming.kafka.v09 with changed API. I didn't remove old classes for more backward compatibility. User will not need to change his old spark applications when he uprgade to new Spark version.\\nPlease rewiew my changes\",\n        \"shortDescription\": \"Kafka 0.9 already released and it introduce new consumer API that not compatible with old one. So, I added new consumer api. I made separate classes i …\",\n        \"created\": \"2015-12-07T11:26:41.000+0000\",\n        \"resolved\": \"2016-06-30T06:21:56.000+0000\",\n        \"belongsTo\": \"SPARK\",\n        \"issueType\": \"Improvement\",\n        \"status\": \"Resolved\",\n        \"resolution\": \"Fixed\",\n        \"priority\": \"Major\",\n        \"assignee\": \"cody@koeninger.org\",\n        \"reporter\": \"ntarasenko\",\n        \"designDecision\": true,\n        \"decisionCategory\": \"Structural decision\",\n        \"concepts\": [\n            \"Apache Spark\",\n            \"backward compatibility\",\n            \"kafka\",\n            \"API\",\n            \"Apache\"\n        ],\n        \"keywords\": [\n            \"compatible\",\n            \"classes\",\n            \"user\",\n            \"streaming\",\n            \"applications\",\n            \"Apache\",\n            \"separate\",\n            \"consumer\",\n            \"package\",\n            \"version\",\n            \"kafkadstreams\",\n            \"C\",\n            \"ease\",\n            \"stream\",\n            \"release\",\n            \"dstreams\",\n            \"didn\",\n            \"EL\",\n            \"rate\",\n            \"class\",\n            \"streams\",\n            \"Kafka\",\n            \"Compatibility\",\n            \"Read\",\n            \"application\",\n            \"move\",\n            \"Change\"\n        ],\n        \"qualityAttributes\": \"\",\n        \"similarDocuments\": [\n            {\n                \"summary\": \"Python API for ml feature CountVectorizer\",\n                \"name\": \"SPARK-9769\",\n                \"description\": \"Python API  user guide and example for ml feature CountVectorizerModel\",\n                \"jaccardsimilarity\": \"5.71\",\n                \"cosinesimilarity\": \"46.39\"\n            },\n            {\n                \"summary\": \"Python API for ml regression IsotonicRegression\",\n                \"name\": \"SPARK-9774\",\n                \"description\": \"Python API  user guide and example for ml regression IsotonicRegression\",\n                \"jaccardsimilarity\": \"5.88\",\n                \"cosinesimilarity\": \"51.27\"\n            },\n            {\n                \"summary\": \"KafkaDStreams to new Kafka 0 10 Consumer API\",\n                \"name\": \"SPARK-12177\",\n                \"description\": \"0 9 already released and it introduce new consumer API that not compatible with old one  So  I added new consumer api  I made separate classes in package org apache spark streaming kafka v09 with changed API  I didn t remove old classes for more backward compatibility  User will not need to change his old spark applications when he uprgade to new Spark version  Please rewiew my changes\",\n                \"jaccardsimilarity\": \"96.67\",\n                \"cosinesimilarity\": \"99.34\"\n            }\n        ]\n    },\n    {\n        \"name\": \"SPARK-13671\",\n        \"summary\": \"Use different physical plan for existing RDD and data sources\",\n        \"description\": \"Right now, we use PhysicalRDD for both existing RDD and data sources, they are becoming much different, we should use different physical plans for them.\",\n        \"shortDescription\": \"Right now, we use PhysicalRDD for both existing RDD and data sources, they are becoming much different, we should use different physical plans for the …\",\n        \"created\": \"2016-03-04T08:01:16.000+0000\",\n        \"resolved\": \"2017-01-12T09:54:50.000+0000\",\n        \"belongsTo\": \"SPARK\",\n        \"issueType\": \"Task\",\n        \"status\": \"Resolved\",\n        \"resolution\": \"Fixed\",\n        \"priority\": \"Major\",\n        \"assignee\": \"davies\",\n        \"reporter\": \"davies\",\n        \"designDecision\": true,\n        \"decisionCategory\": \"Structural decision\",\n        \"concepts\": \"\",\n        \"keywords\": [\n            \"data\",\n            \"sources\",\n            \"PLAN\",\n            \"physical\",\n            \"physicalrdd\",\n            \"C\",\n            \"source\",\n            \"data source\",\n            \"plans\"\n        ],\n        \"qualityAttributes\": \"\",\n        \"similarDocuments\": [\n            {\n                \"summary\": \"toLocalIterator to pyspark rdd\",\n                \"name\": \"SPARK-5440\",\n                \"description\": \"toLocalIterator is available in Java and Scala  If we add this functionality to Python  then we can also be able to use PySpark to iterate over a dataset partition by partition\",\n                \"jaccardsimilarity\": \"8.33\",\n                \"cosinesimilarity\": \"15.79\"\n            },\n            {\n                \"summary\": \"different physical plan for existing RDD and data sources\",\n                \"name\": \"SPARK-13671\",\n                \"description\": \"now  we use PhysicalRDD for both existing RDD and data sources  they are becoming much different  we should use different physical plans for them\",\n                \"jaccardsimilarity\": \"91.67\",\n                \"cosinesimilarity\": \"100.00\"\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Get one design decision",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/designDecision?issueKey={{ISSUE_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"designDecision"
							],
							"query": [
								{
									"key": "issueKey",
									"value": "{{ISSUE_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to retrieve one processed design decision.\n\nIt accepts the issue key as a parameter. If found, the design decision will be returned."
					},
					"response": [
						{
							"id": "a0fb361f-2df9-4d75-9fda-a64a5982d3f7",
							"name": "Get one design decision example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{SERVER_URL}}/designDecision?issueKey={{ISSUE_KEY}}",
									"host": [
										"{{SERVER_URL}}"
									],
									"path": [
										"designDecision"
									],
									"query": [
										{
											"key": "issueKey",
											"value": "{{ISSUE_KEY}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2359",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Sun, 13 May 2018 22:16:29 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								}
							],
							"cookie": [],
							"body": "{\"name\":\"SPARK-12177\",\"summary\":\"Update KafkaDStreams to new Kafka 0.10 Consumer API\",\"description\":\"Kafka 0.9 already released and it introduce new consumer API that not compatible with old one. So, I added new consumer api. I made separate classes in package org.apache.spark.streaming.kafka.v09 with changed API. I didn't remove old classes for more backward compatibility. User will not need to change his old spark applications when he uprgade to new Spark version.\\nPlease rewiew my changes\",\"shortDescription\":\"Kafka 0.9 already released and it introduce new consumer API that not compatible with old one. So, I added new consumer api. I made separate classes i …\",\"created\":\"2015-12-07T11:26:41.000+0000\",\"resolved\":\"2016-06-30T06:21:56.000+0000\",\"belongsTo\":\"SPARK\",\"issueType\":\"Improvement\",\"status\":\"Resolved\",\"resolution\":\"Fixed\",\"priority\":\"Major\",\"assignee\":\"cody@koeninger.org\",\"reporter\":\"ntarasenko\",\"designDecision\":true,\"decisionCategory\":\"Structural decision\",\"concepts\":[\"Apache Spark\",\"backward compatibility\",\"kafka\",\"API\",\"Apache\"],\"keywords\":[\"compatible\",\"classes\",\"user\",\"streaming\",\"applications\",\"Apache\",\"separate\",\"consumer\",\"package\",\"version\",\"kafkadstreams\",\"C\",\"ease\",\"stream\",\"release\",\"dstreams\",\"didn\",\"EL\",\"rate\",\"class\",\"streams\",\"Kafka\",\"Compatibility\",\"Read\",\"application\",\"move\",\"Change\"],\"qualityAttributes\":\"\",\"similarDocuments\":[{\"summary\":\"Python API for ml feature CountVectorizer\",\"name\":\"SPARK-9769\",\"description\":\"Python API  user guide and example for ml feature CountVectorizerModel\",\"jaccardsimilarity\":\"5.71\",\"cosinesimilarity\":\"46.39\"},{\"summary\":\"Python API for ml regression IsotonicRegression\",\"name\":\"SPARK-9774\",\"description\":\"Python API  user guide and example for ml regression IsotonicRegression\",\"jaccardsimilarity\":\"5.88\",\"cosinesimilarity\":\"51.27\"},{\"summary\":\"KafkaDStreams to new Kafka 0 10 Consumer API\",\"name\":\"SPARK-12177\",\"description\":\"0 9 already released and it introduce new consumer API that not compatible with old one  So  I added new consumer api  I made separate classes in package org apache spark streaming kafka v09 with changed API  I didn t remove old classes for more backward compatibility  User will not need to change his old spark applications when he uprgade to new Spark version  Please rewiew my changes\",\"jaccardsimilarity\":\"96.67\",\"cosinesimilarity\":\"99.34\"}]}"
						}
					]
				}
			]
		},
		{
			"name": "Import projects",
			"description": "",
			"item": [
				{
					"name": "Update project import state",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/updateProjectProcessState?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"updateProjectProcessState"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to update the process state of a project. In the `projects` collection, `preProcessed` and `decisionCount` fields will be updated.\n\nIt accepts the project key as parameter."
					},
					"response": []
				},
				{
					"name": "Update project issue count",
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{SERVER_URL}}/updateProjectIssueCount?projectKey={{PROJECT_KEY}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"updateProjectIssueCount"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "{{PROJECT_KEY}}"
								}
							]
						},
						"description": "This endpoint is used to update the issue count of a project. In the `projects` collection, `issueCount` field will be updated.\n\nIt accepts the project key as parameter."
					},
					"response": []
				}
			]
		}
	]
}