# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET           /updateAllConcepts        controllers.amelie.KeywordExtractorController.updateConceptsForDesignDecisions(projectName: String)
GET           /updateAllKeywords        controllers.amelie.KeywordExtractorController.updateKeywordsForDesignDecisions(projectName: String)

GET           /addToken                 controllers.AnnotationController.addToken(token: String ?= "")
GET           /removeToken              controllers.AnnotationController.removeToken(token: String ?= "")
POST          /processDocument          controllers.DocumentController.processDocument()
POST          /annotate                 controllers.DocumentController.processDocument()
POST          /getMetaInformation                           controllers.DocumentController.getMetaInformation()
POST          /getSoftwareSolutions                         controllers.SoftwareRecommendationController.getSoftwareSolutions()
POST          /getAlternatives                              controllers.AlternativesController.getAlternatives()
POST          /removeSoftware                               controllers.SoftwareRecommendationController.removeSoftwareSolution()
POST          /addSoftware                                  controllers.SoftwareRecommendationController.addSoftwareSolution()
POST          /removeAlternative                            controllers.AlternativesController.removeAlternative()
POST          /addAlternative                               controllers.AlternativesController.addAlternative()

#cc-annotator rest api
POST          /processCode                                  controllers.CodeController.processCode()
GET           /pattern                                      controllers.CodeController.pattern(projectId: String ?= "")
POST          /pattern                                      controllers.CodeController.updatePattern()
POST          /codeToken                                    controllers.CCAnnotatorController.create()
GET           /codeToken                                    controllers.CCAnnotatorController.getAll()
GET           /codeTokenInFile                              controllers.CCAnnotatorController.getAllForFileId(fileId: String ?= "")
GET           /codeTokenInProject                           controllers.CCAnnotatorController.getAllForProjectId(projectId: String ?= "")
GET           /deleteCodeToken                              controllers.CCAnnotatorController.delete(id: String ?= "")

# Amelietor specific
POST          /getFileContent                               controllers.getFileContent.upload()
POST          /createSession                                controllers.SessionController.createNewSession()

GET           /annotations                                  controllers.AnnotationController.getAll()
GET           /paragraph/:paragraphHash/annotations         controllers.AnnotationController.getAnnotationsByHash(paragraphHash: String)
POST          /annotation                                   controllers.AnnotationController.create()
PUT           /annotation/:annotationId                     controllers.AnnotationController.update(annotationId: String)
DELETE        /annotation/:annotationId        controllers.AnnotationController.delete(annotationId: String)


#uncertainty detection
POST          /upload                          controllers.getFileContent.uploadAndSave()
GET           /annotate/:paraghraphHash        controllers.SpaCyController.process(paraghraphHash)

#POST          /record/delete/all                           controllers.RecordController.deleteAllDocuments()
#GET           /record/all                                  controllers.RecordController.getAllDocuments()
GET           /updateTaskWithQA            controllers.amelie.QualityAttributesController.updateTaskWithQA(projectName: String)
GET           /updateTaskWithAE            controllers.amelie.ArchitecturalElementsController.updateTaskWithAE(projectName: String)
GET           /getAssignee                 controllers.amelie.AssigneeController.getAssignee(projectName: String)
GET           /predictAssignee             controllers.amelie.PredictionController.predictAssignee(projectName: String)

GET           /labelDesignDecisions        controllers.amelie.LabelDesignDecisionsController.labelDesignDecisions(projectName: String)

GET           /getDataForAEV               controllers.amelie.AEDataController.getAEData(projectName: String)
GET           /getDataForQAV               controllers.amelie.QADataController.getQAData(projectName: String)
POST          /getDataForDDV               controllers.amelie.DDDataController.getDDData()
POST          /project                     controllers.amelie.ProjectController.create()
GET           /project                     controllers.amelie.ProjectController.getAll()
GET           /project/:id                                  controllers.amelie.ProjectController.getProjectById(id: String)